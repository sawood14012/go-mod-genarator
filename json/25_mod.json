[{"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMTENDERMINTTENDERMINTRPCCLIENT-564971"], "references": ["GitHub Commit:https://github.com/tendermint/tendermint/commit/03085c2da23b179c4a51f59a03cb40aa4e85a613", "GitHub PR:https://github.com/tendermint/tendermint/pull/3430"], "snyk_cwes": ["CWE-189"], "vertex_label": ["SCVE"], "description": ["## Overview\n\n[github.com/tendermint/tendermint/rpc/client](https://github.com/tendermint/tendermint) is a Byzantine Fault Tolerant (BFT) middleware that takes a state transition machine - written in any programming language - and securely replicates it on many machines.\n\n\nAffected versions of this package are vulnerable to Denial of Service (DoS).\nBy default, the http go client support Gzip-compressed Http response. The cli and light binary does not disable this support via the `DisableCompression` property of the HTTPTransport object. As soon as it sents a Http Request to a user-controlled server, it become possible to cause a Denial of Service via a GZIP bomb.\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\r\n\r\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\r\n\r\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\r\n\r\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\r\n\r\nTwo common types of DoS vulnerabilities:\r\n\r\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\r\n\r\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](npm:ws:20171108)\n\n\n## Remediation\n\nUpgrade `github.com/tendermint/tendermint/rpc/client` to version 0.31.1 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/tendermint/tendermint/commit/03085c2da23b179c4a51f59a03cb40aa4e85a613)\n\n- [GitHub PR](https://github.com/tendermint/tendermint/pull/3430)\n"], "cvss_scores": [5.9], "modified_date": ["20201105"], "title": ["Denial of Service (DoS)"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H/E:U/RL:O/RC:R"], "vuln_commit_date_rules": ["<#2019-03-20T00:18:18Z"], "package_name": ["github.com/tendermint/tendermint/rpc/client"], "fixed_in": ["0.31.1"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMTENDERMINTTENDERMINTRPCCLIENT-564971"], "snyk_pvt_vulnerability": [true], "module_name": ["github.com/tendermint/tendermint"], "exploit": ["Unproven"], "patch_exists": [""], "fixable": [true], "versions": ["0.28.0-de", "0.27.0-rc0", "0.26.3", "0.26.1-rc2", "0.22.7", "0.22.1", "0.29.2-rc1", "0.26.1-rc1", "0.21.0", "0.19.5-rc0", "0.19.2", "0.19.1", "0.12.0", "0.30.0-rc0", "0.29.0-beta0", "0.28.0-beta1", "0.19.6", "0.19.6-rc2", "0.19.6-rc1", "0.10.0-rc1", "0.30.2", "0.27.2", "0.26.0", "0.21.1-rc1", "0.22.3", "0.18.0-autodraft", "0.30.1", "0.28.1", "0.27.3", "0.24.0", "0.16.0", "0.31.0", "0.26.0-rc0", "0.24.0-rc0", "0.22.4", "0.20.0", "0.20.0-rc3", "0.19.8", "0.19.7-rc0", "0.19.0-rc4", "0.19.0-rc3", "0.11.0", "0.10.5", "0.10.1", "0.19.0-rc2", "0.7.1", "0.30.4", "0.30.0", "0.29.2-rc2", "0.27.0-de", "0.26.2-rc0", "0.23.0", "0.22.4-rc0", "0.20.1-rc0", "0.19.9", "0.19.3-rc0", "0.18.0", "0.17.1", "0.17.0", "0.15.0", "0.10.0-rc2", "0.22.2", "0.22.2-rc0", "0.21.1-rc0", "0.18.0-rc1", "0.29.1-rc0", "0.26.1-rc0", "0.22.6", "0.31.0-de", "0.29.2-rc0", "0.29.1", "0.27.4", "0.23.1-rc0", "0.22.5", "0.22.0", "0.20.0-rc1", "0.20.0-rc0", "0.19.6-rc0", "0.19.5-rc1", "0.30.3", "0.29.0-beta1", "0.28.0", "0.26.4", "0.22.8", "0.19.3", "0.14.0", "0.10.4", "0.26.1", "0.26.1-rc3", "0.22.0-autodraft", "0.10.0", "0.9.1", "0.1", "0.19.0-rc1", "0.7.3", "0.7.4", "0.27.1", "0.26.2", "0.21.0-rc0", "0.20.0-rc2", "0.8.0", "0.7.0", "0.2", "0.7.2", "0.23.1", "0.19.9-rc0", "0.10.2", "0.29.2", "0.29.0-rc0", "0.27.0", "0.25.0", "0.22.8-autodraft", "0.22.0-rc2", "0.19.7", "0.19.0", "0.12.1", "0.11.1", "0.10.3"]}, {"severity": ["critical"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMSQUARESQUALOR-559170"], "references": ["GitHub Commit:https://github.com/square/squalor/commit/f6f0a47cc344711042eb0970cb423e6950ba3f93", "GitHub Fix PR:https://github.com/square/squalor/pull/76"], "snyk_cwes": ["CWE-89"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/square/squalor](https://github.com/square/squalor) is a Go SQL utility library.\n\nAffected versions of this package are vulnerable to SQL Injection in the table name parameter.\n## Remediation\nUpgrade `github.com/square/squalor` to version 0.0.0-20200722213924-58a8e4213020 or higher.\n## References\n- [GitHub Commit](https://github.com/square/squalor/commit/f6f0a47cc344711042eb0970cb423e6950ba3f93)\n- [GitHub Fix PR](https://github.com/square/squalor/pull/76)\n"], "cvss_scores": [9.4], "modified_date": ["20201105"], "title": ["SQL Injection"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:H/A:H"], "vuln_commit_date_rules": ["<#2020-03-06T15:40:55Z"], "package_name": ["github.com/square/squalor"], "fixed_in": ["0.0.0-20200722213924-58a8e4213020"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMSQUARESQUALOR-559170"], "snyk_pvt_vulnerability": [true], "module_name": ["github.com/square/squalor"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": []}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGRAVITATIONALTELEPORTLIBCLIENT-564514"], "references": ["GitHub PR:https://github.com/gravitational/teleport/commit/db0931a7d8d6f2d3684ee0d562be91918e8bff62", "Release Notes:https://github.com/gravitational/teleport/blob/master/CHANGELOG.md%23427"], "snyk_cwes": ["CWE-20"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/gravitational/teleport/lib/client](https://github.com/gravitational/teleport) is a privileged access management tool.\n\nAffected versions of this package are vulnerable to Improper Validation. Host certificate validation was disabled for clusters where connections were terminated at the node, giving an attacker the ability to impersonate a Teleport node without detection when connecting through the Web UI.\n## Remediation\nUpgrade `github.com/gravitational/teleport/lib/client` to version 4.0.16, 4.1.10, 4.2.7 or higher.\n## References\n- [GitHub PR](https://github.com/gravitational/teleport/commit/db0931a7d8d6f2d3684ee0d562be91918e8bff62)\n- [Release Notes](https://github.com/gravitational/teleport/blob/master/CHANGELOG.md#427)\n"], "cvss_scores": [7.5], "modified_date": ["20201105"], "title": ["Improper Validation"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:U/RL:O/RC:C"], "vuln_commit_date_rules": ["<#2020-03-23T22:53:03Z,>=#2019-10-01T20:48:30Z&<#2020-03-23T22:56:27Z,>=#2019-12-19T00:55:23Z&<#2020-03-23T23:04:06Z"], "package_name": ["github.com/gravitational/teleport/lib/client"], "fixed_in": ["4.0.16", "4.1.10", "4.2.7"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMGRAVITATIONALTELEPORTLIBCLIENT-564514"], "snyk_pvt_vulnerability": [true], "module_name": ["github.com/gravitational/teleport"], "exploit": ["Unproven"], "patch_exists": [""], "fixable": [true], "versions": ["0.2.1", "3.2.10", "3.2.0-rc.1", "3.1.7", "3.1.1-alpha.2", "3.0.2", "2.6.8", "2.6.7-beta.1", "2.6.0", "2.6.0-beta.2", "2.5.6", "2.5.5", "2.5.4", "2.5.0-beta.1", "2.4.5", "2.2.5", "4.1.0", "4.0.13", "4.0.8", "4.0.6", "3.1.3", "3.0.1", "3.0.0-rc.4", "2.7.5", "2.6.7", "2.3.5-rc1", "0.1.0-alpha.17", "0.1.0-alpha.12", "0.2.2", "1.2.0", "3.2.7", "2.7.9", "2.6.10", "2.6.0-alpha.6", "2.5.2", "2.3.0-rc3", "0.1.0-alpha.3", "1.0.2", "1.0.1", "1.3.1", "3.0.0-alpha.8", "2.3.2", "2.3.1", "2.2.4", "2.2.2", "2.1.0-alpha.5", "4.2.1-rc.1", "4.0.0-rc.2", "2.7.3", "2.5.0-alpha.5", "2.4.8", "2.4.7", "2.3.0-rc2", "2.2.1", "2.1.0-alpha.3", "2.0.0-alpha.6", "4.0.14", "3.1.11", "3.1.10", "3.0.0-beta.1", "2.7.0-alpha.8", "2.5.0-alpha.2", "2.4.6", "2.0.0-rc.3", "0.2.0-beta.6", "0.2.0-beta.2", "0.2.0-beta.0", "1.3.2", "4.0.2", "3.2.1", "2.7.4", "2.6.0-rc.3", "2.4.2", "2.4.0", "2.4.0-rc.3", "2.3.7", "2.2.7", "2.0.0-alpha.7", "0.2.0-alpha.0", "0.1.0-alpha.10", "0.1.0-alpha.2", "4.2.5-beta.2", "4.1.7", "4.1.4", "3.2.14", "3.2.2", "3.1.0", "3.0.0-rc.3", "3.0.0-rc.1", "2.7.0-alpha.7", "2.5.7", "2.5.3", "2.4.9", "2.4.1", "2.4.0-rc.2", "2.0.0-rc.1", "2.0.0-alpha.5", "2.0.0-alpha.3", "4.0.15", "4.0.9", "3.1.14", "3.1.6", "3.0.0", "2.7.6", "2.3.5-rc.2", "2.1.0-alpha.2", "2.0.0-alpha.8", "0.2.0-beta.1", "0.1.0-alpha.0", "4.2.3-beta.1", "4.0.4-debug.1", "4.0.1", "3.2.5", "3.1.15", "3.1.2", "3.1.1-alpha.1", "2.7.1", "2.4.4", "2.1.0-alpha.4", "0.1.0-alpha.6", "4.2.5-beta.1", "4.2.2", "4.2.1", "4.1.8", "4.1.2", "4.0.11", "3.2.13", "3.0.0-rc.6", "3.0.0-rc.5", "3.0.0-alpha.9", "2.6.9", "2.6.6", "2.6.1", "2.6.0-rc.1", "2.6.0-alpha.2", "2.3.0-rc1", "2.2.8", "2.2.6", "2.1.0-alpha.6", "2.0.4", "2.0.0-rc.2", "2.0.0-beta.2", "4.0.0-beta.1", "3.2.3", "3.1.0-alpha.1", "3.0.0-rc.2", "2.5.8", "4.2.5", "4.2.0", "3.1.0-alpha.3", "2.7.0-alpha.5", "2.6.7-beta.2", "2.6.5", "2.4.0-rc.4", "2.2.0-alpha.8", ".2.5.0-beta.2", "1.1.0", "1.0.4", "4.2.3", "3.2.15", "3.2.6", "3.2.0", "3.1.8", "3.1.1", "3.0.0-alpha.5", "2.7.0-rc.3", "2.2.0-alpha.9", "0.2.3", "4.2.1-rc.2", "4.1.9", "4.0.4", "3.1.0-alpha.4", "3.0.6", "3.0.4", "3.0.3", "2.7.0-rc.1", "2.4.11", "2.3.0", "2.2.0", "2.2.0-beta.1", "2.0.6", "2.0.2", "1.0.5", "1.0.0", "4.1.5", "4.0.12", "4.0.3", "4.0.0-alpha.1", "3.2.9", "3.2.4", "3.2.0-alpha.2", "3.1.4", "3.0.0-alpha.7", "2.7.0", "2.7.0-alpha.4", "2.6.3", "2.6.0-beta.3", "2.6.0-alpha.0", "2.5.1", "2.5.0-alpha.6", "2.5.0-alpha.4", "2.4.0-rc.1", "2.3.3", "0.2.0-beta.4", "0.1.0-alpha.14", "0.0.11", "2.1.0-alpha1"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUNKNWONCAETZ-570384"], "references": ["GitHub Commit:https://github.com/unknwon/cae/commit/07971c00a1bfd9dc171c3ad0bfab5b67c2287e11"], "snyk_cwes": ["CWE-22"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/unknwon/cae/tz](https://github.com/unknwon/cae) is a package that provides archiving functionality for `.tar.gz` archives.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). The `ExtractTo` function doesnt securely escape file paths in zip archives which include leading or non-leading ... This allows an attacker to add or replace files system-wide.\r\n\r\n### PoC by Georgios Gkitsas\r\n```\r\npackage main\r\n\r\nimport (\r\n    cae_tz github.com/unknwon/cae/tz\r\n)\r\n\r\n\r\nfunc main() {\r\n    file := relative.tar.gz\r\n    z, _ := cae_tz.Open(file)\r\n    z.ExtractTo(.)\r\n}\r\n```\r\n\r\nwhere relative.tar.gz is a .tar.gz archive that includes a leading/non-leading .. in at least one file path.\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a ../../file.exe location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nUpgrade `github.com/unknwon/cae/tz` to version 1.0.1 or higher.\n## References\n- [GitHub Commit](https://github.com/unknwon/cae/commit/07971c00a1bfd9dc171c3ad0bfab5b67c2287e11)\n"], "cvss_scores": [7.5], "snyk_cve_ids": ["CVE-2020-7668"], "modified_date": ["20201105"], "title": ["Arbitrary File Write via Archive Extraction (Zip Slip)"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N/E:P/RL:U/RC:C"], "vuln_commit_date_rules": ["<#2020-09-06T05:23:18Z"], "package_name": ["github.com/unknwon/cae/tz"], "fixed_in": ["1.0.1"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMUNKNWONCAETZ-570384"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/unknwon/cae"], "exploit": ["Proof of Concept"], "patch_exists": [""], "fixable": [true], "versions": ["1.0.0", "0.0.1"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOAAHAAH-559113"], "references": ["GItHub Issue:https://github.com/go-aah/aah/issues/266", "GitHub Commit:https://github.com/go-aah/aah/pull/267/commits/2c8f53fa7d3affbc79a1153773cb9d0607085b01", "GitHub PR:https://github.com/go-aah/aah/pull/267"], "snyk_cwes": ["CWE-23"], "vertex_label": ["SCVE"], "description": ["## Overview\n\n[github.com/go-aah/aah](https://github.com/go-aah/aah) is a Go web framework.\n\n\nAffected versions of this package are vulnerable to Directory Traversal\nvia static file delivery.\n\n## Details\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with dot-dot-slash (../) sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\r\n\r\nDirectory Traversal vulnerabilities can be generally divided into two types:\r\n\r\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\r\n\r\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\r\n\r\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\r\n\r\n```\r\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\r\n```\r\n**Note** `%2e` is the URL encoded version of `.` (dot).\r\n\r\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \r\n\r\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\r\n\r\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\r\n\r\n```\r\n2018-04-15 22:04:29 .....           19           19  good.txt\r\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\r\n```\n\n## Remediation\n\nUpgrade `github.com/go-aah/aah` to version 0.12.4 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/go-aah/aah/pull/267/commits/2c8f53fa7d3affbc79a1153773cb9d0607085b01)\n\n- [GItHub Issue](https://github.com/go-aah/aah/issues/266)\n\n- [GitHub PR](https://github.com/go-aah/aah/pull/267)\n"], "cvss_scores": [7.5], "modified_date": ["20201105"], "title": ["Directory Traversal"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:U/RL:O/RC:C"], "vuln_commit_date_rules": ["<#2020-03-03T09:27:03Z"], "package_name": ["github.com/go-aah/aah"], "fixed_in": ["0.12.4"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMGOAAHAAH-559113"], "snyk_pvt_vulnerability": [true], "module_name": ["github.com/go-aah/aah"], "exploit": ["Unproven"], "patch_exists": [""], "fixable": [true], "versions": ["0.12.3", "0.11.1", "0.6", "0.10", "0.12.2", "0.11.4", "0.11.2", "0.11.0", "0.5.1", "0.11.3", "0.4.1", "0.2", "0.12.1", "0.8", "0.5", "0.3", "0.10.1", "0.9", "0.7", "0.4", "0.12.0", "0.1"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-K8SIOKUBERNETESPKGUTILMOUNT-174799"], "references": ["GitHub Commit:https://github.com/kubernetes/kubernetes/commit/d65039c56ce4de5f2efdc38aa1284eeb95f89169", "GitHub Issue:https://github.com/kubernetes/kubernetes/issues/65750", "GitHub PR:https://github.com/kubernetes/kubernetes/pull/65751"], "snyk_cwes": ["CWE-78"], "vertex_label": ["SCVE"], "description": ["## Overview\n[k8s.io/kubernetes/pkg/util/mount](https://godoc.org/k8s.io/kubernetes/pkg/util/mount) is a Production-Grade Container Scheduling and Management.\n\nAffected versions of this package are vulnerable to Arbitrary Command Injection. User input was handled insecurely while setting up volume mounts on Windows nodes, which could lead to command line argument injection.\n## Remediation\nUpgrade `k8s.io/kubernetes/pkg/util/mount` to version 1.9.10, 1.10.6, 1.11.2 or higher.\n## References\n- [GitHub Commit](https://github.com/kubernetes/kubernetes/commit/d65039c56ce4de5f2efdc38aa1284eeb95f89169)\n- [GitHub Issue](https://github.com/kubernetes/kubernetes/issues/65750)\n- [GitHub PR](https://github.com/kubernetes/kubernetes/pull/65751)\n"], "cvss_scores": [7.1], "snyk_cve_ids": ["CVE-2018-1002101"], "modified_date": ["20201105"], "title": ["Arbitrary Command Injection"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:L"], "vuln_commit_date_rules": ["<#2018-07-03T13:16:06Z"], "package_name": ["k8s.io/kubernetes/pkg/util/mount"], "fixed_in": ["1.10.6", "1.11.2", "1.9.10"], "snyk_vuln_id": ["SNYK-GOLANG-K8SIOKUBERNETESPKGUTILMOUNT-174799"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/kubernetes/kubernetes", "k8s.io/kubernetes"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.9.8-beta.0", "1.10.0", "1.9.7", "1.10.5", "1.9.5-beta.0", "1.10.3", "1.10.1", "1.10.5-beta.0", "1.11.2-beta.0", "1.9.3", "1.9.1-beta.0", "1.10.4-beta.0", "1.10.3-beta.0", "1.9.7-beta.0", "1.9.6-beta.0", "1.9.4", "1.11.1-beta.0", "1.9.4-beta.0", "1.9.10-beta.0", "1.9.9", "1.9.3-beta.0", "1.9.0", "1.11.1", "1.10.6-beta.0", "1.9.6", "1.11.0", "1.9.9-beta.0", "1.9.5", "1.9.2-beta.0", "1.10.4", "1.10.2", "1.10.2-beta.0", "1.10.1-beta.0", "1.9.8", "1.9.2", "1.9.1"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDUTCHCODERSTRANSFERSHSERVER-568775"], "references": ["GitHub Issue:https://github.com/dutchcoders/transfer.sh/issues/308", "GitHub PR:https://github.com/dutchcoders/transfer.sh/pull/309"], "snyk_cwes": ["CWE-22"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/dutchcoders/transfer.sh/server](https://github.com/dutchcoders/transfer.sh) is an Easy and fast file sharing from the command-line\n\nAffected versions of this package are vulnerable to Directory Traversal. Given the known URL of an item on the server, you can freely read its metadata, which includes its delete token and simply delete it. It also allows for arbitrary traversal and reading of the filesystem if the provider is local and is not using a posix-style path such as windows.\r\n\r\n### PoC\r\n```\r\nURL=http://localhost:8080/dRz9w/thing\r\ncurl -X DELETE $URL/$(curl $URL.metadata | jq -r .DeletionToken)\r\necho And poof. Its gone\r\n\r\ncurl localhost:8080/AHWlO/..\\..\\private.txt\r\n```\n\n## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with dot-dot-slash (../) sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```\n\n## Remediation\nUpgrade `github.com/dutchcoders/transfer.sh/server` to version  or higher.\n## References\n- [GitHub Issue](https://github.com/dutchcoders/transfer.sh/issues/308)\n- [GitHub PR](https://github.com/dutchcoders/transfer.sh/pull/309)\n"], "cvss_scores": [7.7], "modified_date": ["20201105"], "title": ["Directory Traversal"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:L"], "vuln_commit_date_rules": ["<#2020-05-08T23:23:32Z"], "package_name": ["github.com/dutchcoders/transfer.sh/server"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMDUTCHCODERSTRANSFERSHSERVER-568775"], "snyk_pvt_vulnerability": [true], "module_name": ["github.com/dutchcoders/transfer.sh"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.1.3", "1.1.7", "1.1.5", "1.1.0", "1.1.6", "1.1.4", "1.0.0", "1.1.2", "1.1.1"]}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHYBRIDGROUPGOBOTPLATFORMSMQTT-174852"], "references": ["GitHub Commit:https://github.com/hybridgroup/gobot/commit/c1aa4f867846da4669ecf3bc3318bd96b7ee6f3f", "GitHub Release:https://github.com/hybridgroup/gobot/releases/tag/v1.13.0"], "snyk_cwes": ["CWE-453"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/hybridgroup/gobot/platforms/mqtt](https://github.com/hybridgroup/gobot) is a Golang framework for robotics, drones, and the Internet of Things (IoT).\n\nAffected versions of this package are vulnerable to Insecure Defaults. It skipped verification of root CA certificates by using default `InsecureSkipVerify`.\n## Remediation\nUpgrade `github.com/hybridgroup/gobot/platforms/mqtt` to version 1.13.0 or higher.\n## References\n- [GitHub Commit](https://github.com/hybridgroup/gobot/commit/c1aa4f867846da4669ecf3bc3318bd96b7ee6f3f)\n- [GitHub Release](https://github.com/hybridgroup/gobot/releases/tag/v1.13.0)\n"], "cvss_scores": [5.6], "modified_date": ["20201105"], "title": ["Insecure Defaults"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"], "vuln_commit_date_rules": ["<#2019-05-21T12:29:06Z"], "package_name": ["github.com/hybridgroup/gobot/platforms/mqtt"], "fixed_in": ["1.13.0"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMHYBRIDGROUPGOBOTPLATFORMSMQTT-174852"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/hybridgroup/gobot"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.10.0", "1.0.0", "0.10.0", "1.12.0", "0.7.1", "1.11.0", "1.1.0", "1.2.0", "1.3.0", "0.6.1", "0.6", "1.7.1", "1.6.1", "1.2.1", "0.13.0", "1.9.0", "1.8.0", "1.5.0", "1.6.0", "0.4", "0.5", "0.8.1", "0.5.1", "0.8", "0.7", "0.1", "0.6.2", "0.3", "0.5.2", "1.11.1", "1.10.1", "0.6.3", "0.8.2", "1.7.0", "1.4.0", "0.12.1", "0.12.0", "0.11.0", ".0.11.1", "0.2", "1.10.2"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUROOTUROOTPKGCPIO-570440"], "references": ["GitHub PR:https://github.com/u-root/u-root/pull/1817"], "snyk_cwes": ["CWE-22"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/u-root/u-root/pkg/cpio](http://github.com/u-root/u-root/pkg/cpio) is a package that provides Go versions of standard Linux tools and bootloaders. It also provides tools for compiling Go programs in a single binary and creating initramfs images.\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is vulnerable to leading, non-leading relative path traversal attacks and symlink based (relative and absolute) path traversal attacks in cpio file extraction.\r\n\r\n### PoC by Georgios Gkitsas of Snyk Security Team\r\npoc.go:\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n    io\r\n    log\r\n    os\r\n    github.com/u-root/u-root/pkg/cpio\r\n)\r\n\r\n\r\nfunc main() {\r\n    archiver, err := cpio.Format(newc)\r\n    if err != nil {\r\n        log.Fatalf(Format -H newc not supported: %v, err)\r\n    }\r\n\r\n    var inums map[uint64]string\r\n    inums = make(map[uint64]string)\r\n\r\n    rr := archiver.Reader(os.Stdin)\r\n    for {\r\n        rec, err := rr.ReadRecord()\r\n        if err == io.EOF {\r\n            break\r\n        }\r\n        if err != nil {\r\n            log.Fatalf(error reading records: %v, err)\r\n        }\r\n\r\n        if rec.Info.FileSize == 0 {\r\n            if _, ok := inums[rec.Info.Ino]; ok {\r\n                err := os.Link(inums[rec.Info.Ino], rec.Name)\r\n                if err != nil {\r\n                    log.Fatal(err)\r\n                }\r\n                continue\r\n            }\r\n        }\r\n        inums[rec.Info.Ino] = rec.Name\r\n        if err := cpio.CreateFile(rec); err != nil {\r\n            log.Printf(Creating %q failed: %v, rec.Name, err)\r\n        }\r\n    }\r\n}\r\n```\r\n* Build the executable `go build poc.go`\r\n* Run `./poc < archive.cpio`\r\nwith archive.cpio being a cpio archive that includes at least one of the following:\r\n\r\n1. file with filepath that uses  leading or non-leading ../ \r\n2. file symlink that point outside of the current directory (relative or absolute)\r\n3. directory symlink that point outside of the current directory (relative or absolute) followed by a file under that directory\n\n## Details\n\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a ../../file.exe location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n\n+2018-04-15 22:04:29 ..... 19 19 good.txt\n\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\n\n```\n\n## Remediation\nThere is no fixed version for `github.com/u-root/u-root/pkg/cpio`.\n## References\n- [GitHub PR](https://github.com/u-root/u-root/pull/1817)\n"], "cvss_scores": [7.5], "snyk_cve_ids": ["CVE-2020-7666"], "modified_date": ["20201105"], "title": ["Arbitrary File Write via Archive Extraction (Zip Slip)"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"], "vuln_commit_date_rules": ["*"], "package_name": ["github.com/u-root/u-root/pkg/cpio"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMUROOTUROOTPKGCPIO-570440"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/u-root/u-root"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [""], "versions": ["1.0.0", "test-image-x86-v3.1.0", "7.0.0", "6.0.0", "4.0.0", "3.0.0", "2.0.0", "5.0.0", "test-image-x86-v3.0.0", "test-image-amd64-v3.2.2", "test-image-amd64-v3.2.11"]}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGRAFANAGRAFANA-72632"], "references": ["GitHub Commit:https://github.com/grafana/grafana/commit/112fa2b8b92d737fc7519d72f562867e532e61fd", "GitHub Commit:https://github.com/grafana/grafana/commit/5bd11744dd889565719e34fd6383d9189cc80f12", "GitHub Issue:https://github.com/grafana/grafana/issues/13667", "GitHub PR:https://github.com/grafana/grafana/pull/13670"], "snyk_cwes": ["CWE-79"], "vertex_label": ["SCVE"], "description": ["## Overview\n[grafana](https://github.com/grafana/grafana)  is an open source, feature rich metrics dashboard and graph editor for Graphite, Elasticsearch, OpenTSDB, Prometheus and InfluxDB.\r\n\r\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) attacks via the query editor.\r\n\r\n## Details\r\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\r\n\r\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser\u2019s Same Origin Policy.\r\n\r\n\u05bfInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\r\n\r\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they\u2019ve been correctly escaped in the application code and in this way the attempted attack is diverted.\r\n \r\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \r\n\r\n### Types of attacks\r\nThere are a few methods by which XSS can be manipulated:\r\n\r\n|Type|Origin|Description|\r\n|--|--|--|\r\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\r\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user\u2019s browser.| \r\n|**DOM-based**|Client|The attacker forces the user\u2019s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\r\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\r\n\r\n### Affected environments\r\nThe following environments are susceptible to an XSS attack:\r\n\r\n* Web servers\r\n* Application servers\r\n* Web application environments\r\n\r\n### How to prevent\r\nThis section describes the top best practices designed to specifically protect your code: \r\n\r\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \r\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \r\n* Give users the option to disable client-side scripts.\r\n* Redirect invalid requests.\r\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\r\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\r\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\r\n\r\n## Remediation\r\nUpgrade `grafana` to version 5.3.2 or higher.\n\n## References\n- [GitHub Commit](https://github.com/grafana/grafana/commit/112fa2b8b92d737fc7519d72f562867e532e61fd)\n- [GitHub Commit](https://github.com/grafana/grafana/commit/5bd11744dd889565719e34fd6383d9189cc80f12)\n- [GitHub Issue](https://github.com/grafana/grafana/issues/13667)\n- [GitHub PR](https://github.com/grafana/grafana/pull/13670)\n"], "cvss_scores": [6.5], "modified_date": ["20201104"], "title": ["Cross-site Scripting (XSS)"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N"], "vuln_commit_date_rules": ["<#2018-10-23T09:18:34Z"], "package_name": ["github.com/grafana/grafana"], "fixed_in": ["5.3.2"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMGRAFANAGRAFANA-72632"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/grafana/grafana"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.5.0", "1.1.0", "4.6.5", "4.1.0", "3.0.4", "3.0.0-beta6", "4.6.1", "4.0.0", "list", "1.8.0-rc1", "3.0-beta1", "5.3.0-beta1", "5.2.0-beta1", "5.0.0-beta1", "4.3.1", "packages@6.3.0-alpha.36", "1.8.1", "1.3.0", "5.0.0-beta5", "4.1.0-beta1", "5.1.1", "4.5.2", "4.2.0", "4.2.0-beta1", "5.3.0-beta2", "5.1.3", "4.6.3", "4.6.0-beta2", "4.6.0-beta1", "2.6.0-beta1", "5.2.0", "5.2.0-beta2", "5.1.0", "4.1.1", "4.0.2", "4.0.0-beta1", "3.1.1", "3.1.0", "3.1.0-beta1", "2.1.3", "2.0.1", "1.0.1", "omgtest", "1.9.0", "packages@6.3.0-alpha.33", "5.3.1", "5.2.3", "5.1.4", "5.1.0-beta1", "5.0.3", "5.0.0", "4.5.0", "4.4.2", "4.0.0-beta2", "5.3.0-beta3", "5.0.2", "5.0.0-beta4", "5.0.0-beta2", "4.6.0-beta3", "4.5.1", "4.3.0", "3.0.0-beta7", "2.1.2", "5.0.0-beta3", "4.4.1", "2.6.0", "5.3.0", "5.0.4", "4.4.0", "2.1.1", "2.0.2", "1.8.0", "4.6.4", "4.3.0-beta1", "2.5.0", "2.0.0-beta3", "5.0.1", "4.6.0", "4.4.3", "dupa", "test", "1.4.0", "3.0-beta3", "1.6.1", "1.5.1", "1.7.0-rc1", "packages@6.3.0-beta.1", "1.7.0", "1.0", "3.0-beta2", "1.9.0-rc1", "1.5.2", "1.2.0", "1.6.0", "1.0.3", "1.5.3", "5.,2.4", "1.0.4", "5.2.4", "5.2.2", "4.5.0-beta1", "3.0.3", "2.0.0-beta1", "3.0-beta4", "test-new-release-pipeline", "1.0.2", "1.5.4", "5.1.5", "4.6.2", "3.0.2", "5.2.5", "5.2.1", "5.2.0-beta3", "5.1.2", "4.3.2", "4.1.2", "4.0.1", "3.0.1", "2.1.0", "3.0-beta5", "1.9.1"]}]