[{"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPTERODACTYLWINGSSERVER-598661"], "references": ["GitHub Commit:https://github.com/pterodactyl/wings/commit/4f1b0c67d67e8bf557bcebfe085a266cc73ffa25"], "snyk_cwes": ["CWE-22"], "vertex_label": ["SCVE"], "description": ["## Overview\n\nAffected versions of this package are vulnerable to Directory Traversal via the `Archive` function.\n\n## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with dot-dot-slash (../) sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```\n\n## Remediation\nUpgrade `github.com/pterodactyl/wings/server` to version 1.0.0-beta.8 or higher.\n## References\n- [GitHub Commit](https://github.com/pterodactyl/wings/commit/4f1b0c67d67e8bf557bcebfe085a266cc73ffa25)\n"], "cvss_scores": [6.5], "modified_date": ["20201105"], "title": ["Directory Traversal"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:N"], "vuln_commit_date_rules": ["<#2020-07-18T18:40:38Z"], "package_name": ["github.com/pterodactyl/wings/server"], "fixed_in": ["1.0.0-beta.8"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMPTERODACTYLWINGSSERVER-598661"], "snyk_pvt_vulnerability": [true], "module_name": ["github.com/pterodactyl/wings"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.0.0-beta.7", "1.0.0-beta.4", "1.0.0-alpha.2", "1.0.0-alpha.1", "1.0.0-beta.5", "1.0.0-beta.1", "1.0.0-beta.3", "1.0.0-beta.6", "1.0.0-beta.2"]}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOOGLEFSCRYPTSECURITY-50084"], "references": ["GitHub Commit:https://github.com/google/fscrypt/commit/3022c1603d968c22f147b4a2c49c4637dd1be91b", "GitHub Commit:https://github.com/google/fscrypt/commit/315f9b042237200174a1fb99427f74027e191d66", "GitHub Issue:https://github.com/google/fscrypt/issues/77"], "snyk_cwes": ["CWE-265"], "vertex_label": ["SCVE"], "description": ["## Overview\r\n[`github.com/google/fscrypt/security`](https://github.com/google/fscrypt) is a Go tool for managing Linux filesystem encryption.\r\n\r\nAffected versions of the package are vulnerable to Privilege Escalation. It incorrectly restored primary and supplementary group IDs to the values associated with the root user, which allowed attackers to gain privileges via a successful login through certain applications that use Linux-PAM (aka pam).\r\n\r\n## Remediation\r\nUpgrade `github.com/google/fscrypt/security` to version 0.2.4 or higher.\r\n\r\n## References\r\n- [GitHub Issue](https://github.com/google/fscrypt/issues/77)\r\n- [GitHub Commit](https://github.com/google/fscrypt/commit/3022c1603d968c22f147b4a2c49c4637dd1be91b)\r\n- [GitHub Commit](https://github.com/google/fscrypt/commit/315f9b042237200174a1fb99427f74027e191d66)"], "cvss_scores": [6.5], "snyk_cve_ids": ["CVE-2018-6558"], "modified_date": ["20201105"], "title": ["Privilege Escalation"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"], "vuln_commit_date_rules": ["<#2018-08-23T18:00:34Z"], "package_name": ["github.com/google/fscrypt/security"], "fixed_in": ["0.2.4"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMGOOGLEFSCRYPTSECURITY-50084"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/google/fscrypt"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["0.1.0", "0.2.2", "0.2.0", "0.2.1", "0.2.3"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONCOURSECONCOURSE-598373"], "references": ["GitHub Advisory:https://github.com/concourse/concourse/security/advisories/GHSA-627p-rr78-99rj", "Security Advisory:https://tanzu.vmware.com/security/cve-2020-5415"], "snyk_cwes": ["CWE-290"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/concourse/concourse](https://github.com/concourse/concourse) is an automation system written in Go. It is most commonly used for CI/CD, and is built to scale to any kind of automation pipeline, from simple to complex.\n\nAffected versions of this package are vulnerable to Authentication Bypass. Concourse, versions prior to 6.3.1 and 6.4.1, in installations which use the GitLab auth connector, is vulnerable to identity spoofing by way of configuring a GitLab account with the same full name as another user who is granted access to a Concourse team.GitLab groups do not have this vulnerability, so GitLab users may be moved into groups which are then configured in the Concourse team.\n## Remediation\nUpgrade `github.com/concourse/concourse` to version 6.4.1, 6.3.1 or higher.\n## References\n- [GitHub Advisory](https://github.com/concourse/concourse/security/advisories/GHSA-627p-rr78-99rj)\n- [Security Advisory](https://tanzu.vmware.com/security/cve-2020-5415)\n"], "cvss_scores": [7.5], "snyk_cve_ids": ["CVE-2020-5415"], "modified_date": ["20201105"], "title": ["Authentication Bypass"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"], "vuln_commit_date_rules": ["<#2020-07-30T17:23:04Z,>=#2020-06-10T21:37:54Z&<#2020-07-30T20:21:13Z"], "package_name": ["github.com/concourse/concourse"], "fixed_in": ["6.3.1", "6.4.1"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMCONCOURSECONCOURSE-598373"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/concourse/concourse"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["0.6.0-rc.25", "0.3.0-rc.24", "0.68.0", "0.62.1", "0.56.0", "0.7.0-rc.24", "0.66.0", "1.1.0", "3.3.1", "3.3.4", "3.1.1", "0.73.0", "2.0.0", "0.5.0-rc.10", "0.5.0-rc.8", "0.6.0-rc.23", "0.6.0-rc.5", "5.5.3", "0.26.0", "0.16.0", "3.14.0", "0.62.0", "5.2.7", "5.5.10", "0.53.0", "0.7.0-rc.37", "0.7.0-rc.12", "0.3.0-rc.15", "0.3.0-rc.12", "0.3.0-rc.4", "5.8.0", "0.3.0-rc.33", "0.7.0-rc.14", "0.65.0", "0.3.0-rc.28", "0.3.0-rc.3", "0.7.0-rc.20"]}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONTAINERDCONTAINERDPKGPROCESS-536210"], "references": ["GitHub Commit:https://github.com/containerd/containerd/pull/3366/commits/719a2c594e4aad6a2de5cd9c298ab95309c2135c", "GitHub PR:https://github.com/containerd/containerd/pull/2832"], "snyk_cwes": ["CWE-269"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/containerd/containerd/pkg/process](https://github.com/containerd/containerd) is an open and reliable container runtime.\n\nAffected versions of this package are vulnerable to Improper Privilege Management. Due to the usage of `unix.Kill` to kill a exec process, the pid in execProcess does not get deleted after a exec process has been stopped. Under certain conditions, it might be possible to for unprivileged process reuse generated pid and gain access to its privileges.\n## Remediation\nUpgrade `github.com/containerd/containerd/pkg/process` to version 1.3.0-beta.0 or higher.\n## References\n- [GitHub Commit](https://github.com/containerd/containerd/pull/3366/commits/719a2c594e4aad6a2de5cd9c298ab95309c2135c)\n- [GitHub PR](https://github.com/containerd/containerd/pull/2832)\n"], "cvss_scores": [5.3], "modified_date": ["20201105"], "title": ["Improper Privilege Management"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N"], "vuln_commit_date_rules": ["<#2019-06-26T15:43:57Z"], "package_name": ["github.com/containerd/containerd/pkg/process"], "fixed_in": ["1.3.0-beta.0"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMCONTAINERDCONTAINERDPKGPROCESS-536210"], "snyk_pvt_vulnerability": [true], "module_name": ["github.com/containerd/containerd"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.1.3", "1.2.0-beta.1", "0.2.7", "0.2.8", "0.2.5", "1.1.8", "0.0.2", "1.2.1-rc.0", "1.1.4", "1.1.0", "0.0.3", "1.0.0-alpha0", "1.2.7", "0.0.4", "1.1.1-rc.1", "1.2.0-rc.2", "1.0.0-beta.1", "1.2.11", "1.0.3", "1.0.0-alpha3", "1.2.5", "1.2.2", "0.1.0", "1.1.1-rc.0", "1.0.0-alpha5", "1.0.0", "1.0.2", "1.0.0-alpha2", "0.2.9", "1.2.0-beta.2", "1.1.1-rc.2", "0.2.0", "1.0.0-alpha1", "1.1.7", "1.0.3-rc.0", "1.2.12", "1.2.0", "1.1.1", "1.1.5", "1.0.2-rc.0", "0.0.5", "1.2.14", "1.1.6", "1.0.0-beta.3", "0.2.3", "1.2.9", "0.2.1", "1.2.4", "1.1.0-rc.1", "1.0.1", "1.2.8", "1.2.13", "1.2.0-beta.0", "1.2.1", "1.0.0-rc.0", "1.1.2", "1.1.0-rc.2", "1.0.0-alpha4", "0.2.4", "1.2.3", "1.0.1-rc.0", "1.2.6", "1.2.0-rc.0", "1.1.0-rc.0", "1.0.0-alpha6", "0.2.2", "1.2.0-rc.1", "1.0.0-beta.2", "1.0.2-rc.1", "1.2.10", "0.2.6", "1.0.0-beta.0"]}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMASTAXIEBEEGOSESSION-467115"], "references": ["GitHub Issue:https://github.com/astaxie/beego/issues/3763", "Vulnerable Code:https://github.com/astaxie/beego/blob/develop/session/sess_file.go%23L141"], "snyk_cwes": ["CWE-275"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/astaxie/beego/session](http://github.com/astaxie/beego) is an open-source, high-performance web framework for the Go programming language.\n\nAffected versions of this package are vulnerable to Insecure Permissions. It allows local users to read session files because of weak permissions for individual files.\n## Remediation\nUpgrade `github.com/astaxie/beego/session` to version 1.12.2 or higher.\n## References\n- [GitHub Issue](https://github.com/astaxie/beego/issues/3763)\n- [Vulnerable Code](https://github.com/astaxie/beego/blob/develop/session/sess_file.go#L141)\n"], "cvss_scores": [5.4], "snyk_cve_ids": ["CVE-2019-16354", "CVE-2019-16355"], "modified_date": ["20201105"], "title": ["Insecure Permissions"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N/RL:U/RC:R"], "vuln_commit_date_rules": ["<#2020-06-30T15:25:29Z"], "package_name": ["github.com/astaxie/beego/session"], "fixed_in": ["1.12.2"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMASTAXIEBEEGOSESSION-467115"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/astaxie/beego"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.4.1", "1.7.0", "1.9.0", "0.8.0", "1.12.1", "1.6.0", "1.5.0", "1.10.0", "1.8.0", "0.6.0", "1.8.1", "1.2.0", "1.10.1", "1.4.2", "1.11.1", "1.7.2", "1.4.0", "1.11.0", "1.8.3", "1.0.1", "0.7.0", "0.9.0", "1.9.2", "1.4.3", "1.12.0", "1.8.2", "1.7.1", "1.6.1", "1.3.0"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMALBERTITOCHASQUIDINTERNALSMTPSRV-536440"], "references": ["GitHub Commit:https://github.com/albertito/chasquid/commit/06d808c8ee2b57d4e9312f9692d9d28984281417", "GitHub Commit:https://github.com/albertito/chasquid/commit/99df5e7b5718e08dbb26ee145282ab17c68d16f7"], "snyk_cwes": ["CWE-400"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/albertito/chasquid/internal/smtpsrv](https://github.com/albertito/chasquid) is a SMTP (email) server with a focus on simplicity, security, and ease of operation.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). There is no limit to incoming line length in `textproto.Conn`, so an evil client could cause a memory exhaustion by issuing very long lines.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they arent very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet\u2019s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter A\n- `(B|C+)+` The string must then follow the letter A with either the letter B or some number of occurrences of the letter C (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a D\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesnt take very long for a regex engine to find a match:\n\n```bash\n$ time node -e /A(B|C+)+D/.test(ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD)\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e /A(B|C+)+D/.test(ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX)\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn\u2019t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLets look at how our expression runs into this problem, using a shorter string: ACCCX. While it seems fairly straightforward, there are still four different ways that the engine could match those three Cs:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesnt match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of Cs | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 Cs, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `github.com/albertito/chasquid/internal/smtpsrv` to version 1.2 or higher.\n## References\n- [GitHub Commit](https://github.com/albertito/chasquid/commit/06d808c8ee2b57d4e9312f9692d9d28984281417)\n- [GitHub Commit](https://github.com/albertito/chasquid/commit/99df5e7b5718e08dbb26ee145282ab17c68d16f7)\n"], "cvss_scores": [7.5], "modified_date": ["20201105"], "title": ["Denial of Service (DoS)"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"], "vuln_commit_date_rules": ["<=#2019-10-26T00:56:33Z"], "package_name": ["github.com/albertito/chasquid/internal/smtpsrv"], "fixed_in": ["1.2"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMALBERTITOCHASQUIDINTERNALSMTPSRV-536440"], "snyk_pvt_vulnerability": [true], "module_name": ["github.com/albertito/chasquid"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["0.04", "0.05", "0.06", "0.02", "1.00", "1.1", "0.03", "0.01", "0.07"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHASHICORPCONSULAGENTCONFIG-572118"], "references": ["GitHub  Changelog 1.7.4:https://github.com/hashicorp/consul/blob/v1.7.4/CHANGELOG.md", "GitHub Changelog 1.6.3:https://github.com/hashicorp/consul/blob/v1.6.6/CHANGELOG.md", "GitHub Commit:https://github.com/hashicorp/consul/commit/72f92ae7ca4cabc1dc3069362a9b64ef46941432", "GitHub PR:https://github.com/hashicorp/consul/pull/8023"], "snyk_cwes": ["CWE-400"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/hashicorp/consul/agent/config](https://github.com/hashicorp/consul) is a package, part of Hashicorps, consul.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). The package included an HTTP API (introduced in 1.2.0) and DNS (introduced in 1.4.3) caching feature that was vulnerable to denial of service.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `github.com/hashicorp/consul/agent/config` to version 1.6.6, 1.7.4 or higher.\n## References\n- [GitHub Changelog 1.6.3](https://github.com/hashicorp/consul/blob/v1.6.6/CHANGELOG.md)\n- [GitHub  Changelog 1.7.4](https://github.com/hashicorp/consul/blob/v1.7.4/CHANGELOG.md)\n- [GitHub Commit](https://github.com/hashicorp/consul/commit/72f92ae7ca4cabc1dc3069362a9b64ef46941432)\n- [GitHub PR](https://github.com/hashicorp/consul/pull/8023)\n"], "cvss_scores": [7.5], "snyk_cve_ids": ["CVE-2020-13250"], "modified_date": ["20201105"], "title": ["Denial of Service (DoS)"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"], "vuln_commit_date_rules": [">=#2020-02-11T15:19:16Z&<#2020-06-10T20:03:30Z,>=#2018-06-25T19:45:20Z&<#2020-06-10T21:16:31Z"], "package_name": ["github.com/hashicorp/consul/agent/config"], "fixed_in": ["1.6.6", "1.7.4"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMHASHICORPCONSULAGENTCONFIG-572118"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/hashicorp/consul"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.5.1", "1.6.3", "1.7.2", "1.5.2", "1.2.3", "1.4.5", "1.2.0", "1.6.5", "1.4.4", "1.3.0", "1.7.1", "1.7.0", "1.5.3", "1.4.3", "1.3.1", "1.6.4", "1.4.0-rc1", "1.2.4", "1.7.3", "1.6.0-beta1", "1.4.1", "1.6.0-beta2", "1.5.0", "1.4.0", "1.6.2", "1.6.1", "1.6.0-rc1", "1.2.1", "1.6.0-beta3", "1.6.0", "1.4.2", "1.2.2"]}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKIALIKIALIHANDLERS-561359"], "references": ["GitHub Commit:https://github.com/kiali/kiali/commit/93f5cd0b6698e8fe8772afb8f35816f6c086aef1", "Redhat Bugzilla:https://bugzilla.redhat.com/show_bug.cgi?id=1810387"], "snyk_cwes": ["CWE-295"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/kiali/kiali/handlers](https://github.com/kiali/kiali/tree/master) is a handler package part of kiali.\n\nAffected versions of this package are vulnerable to Insufficient Validation. A remote attacker could abuse this flaw by stealing a valid JWT cookie and using that to spoof a user session, possibly gaining privileges to view and alter the Istio configuration.\n## Remediation\nUpgrade `github.com/kiali/kiali/handlers` to version 1.16.0-snapshot.1 or higher.\n## References\n- [GitHub Commit](https://github.com/kiali/kiali/commit/93f5cd0b6698e8fe8772afb8f35816f6c086aef1)\n- [Redhat Bugzilla](https://bugzilla.redhat.com/show_bug.cgi?id=1810387)\n"], "cvss_scores": [5.9], "snyk_cve_ids": ["CVE-2020-1762"], "modified_date": ["20201105"], "title": ["Insufficient Validation"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"], "vuln_commit_date_rules": ["<#2020-03-25T18:40:02Z"], "package_name": ["github.com/kiali/kiali/handlers"], "fixed_in": ["1.16.0-snapshot.1"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMKIALIKIALIHANDLERS-561359"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/kiali/kiali"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["0.9.1.helmfix", "1.1.0-snapshot.1", "1.12.3", "1.10.0-snapshot.0", "1.0.9", "1.0.6", "0.19.0", "0.12.0-snapshot.1", "0.10.0", "0.8.0-snapshot.1", "1.9.0", "1.4.1", "0.16.0-snapshot.1", "0.13.0", "1.4.2", "1.2.0", "1.0.4", "0.20.0-snapshot.1", "0.18.0", "0.15.0-snapshot.0", "0.12.0", "0.11.0", "0.11.0-snapshot.1", "0.10.1", "0.7.0", "1.12.7", "1.12.4", "1.7.0", "0.21.0-snapshot.1", "0.16.0-snapshot.0", "0.9.0-snapshot.0", "1.12.10", "1.12.1", "1.5.0-snapshot.0", "0.13.0-snapshot.1", "0.8.0", "1.9.1", "1.2.0-snapshot.1", "0.9.0-snapshot.1", "0.6.0", "1.15.0-snapshot.0", "1.14.0-snapshot.0", "1.13.0-snapshot.1", "1.12.9", "1.12.5", "1.12.0-snapshot.2", "1.5.0", "1.3.0-snapshot.1", "1.3.0-snapshot.0", "1.0.0", "0.17.0-snapshot.0", "0.16.2", "0.8.0-snapshot.0", "1.12.0-snapshot.1", "1.8.0-snapshot.0", "1.0.11", "1.0.0-snapshot.0", "0.11.0-snapshot.0", "0.7.1", "1.13.1", "1.12.8", "1.11.0", "1.11.0-snapshot.0", "1.8.0-snapshot.1", "1.6.1", "1.4.0", "1.4.0-snapshot.0", "1.0.10", "1.0.7", "1.14.0-snapshot.1", "0.14.0-snapshot.0", "1.6.0-snapshot.0", "1.0.3", "0.21.0", "0.19.0-snapshot.0", "0.17.0", "0.15.0-snapshot.1", "0.12.0-snapshot.0", "0.2.0.Alpha", "1.6.0", "1.3.0", "1.2.0-snapshot.0", "0.7.2", "0.1.0.Alpha", "1.15.2", "1.12.2", "0.19.0-snapshot.1", "0.18.1", "0.16.0", "0.9.0", "0.7.0-snapshot.0", "1.15.0", "1.14.0", "1.13.0-snapshot.0", "1.10.0-snapshot.1", "1.0.2", "0.21.0-snapshot.2", "0.21.0-snapshot.0", "0.20.0-snapshot.0", "0.17.0-snapshot.1", "0.16.1", "0.15.0", "0.9.1"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMSQUAREGOJOSE-540149"], "references": ["GitHub Commit:https://github.com/square/go-jose/commit/2c5656adca9909843c4ff50acf1d2cf8f32da7e6", "HackerOne Report:https://hackerone.com/reports/169629", "OSS security Advisory:http://www.openwall.com/lists/oss-security/2016/11/03/1"], "snyk_cwes": ["CWE-284"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/square/go-jose](https://github.com/square/go-jose) is a Package that aims to provide an implementation of the Javascript Object Signing and Encryption set of standards.\n\nAffected versions of this package are vulnerable to Signature Validation Bypass. The go-jose library supports messages with multiple signatures. However, when validating a signed message the API did not indicate which signature was valid, which could potentially lead to confusion. For example, users of the library might mistakenly read protected header values from an attached signature that was different from the one originally validated.\n## Remediation\nUpgrade `github.com/square/go-jose` to version 1.1.0 or higher.\n## References\n- [GitHub Commit](https://github.com/square/go-jose/commit/2c5656adca9909843c4ff50acf1d2cf8f32da7e6)\n- [HackerOne Report](https://hackerone.com/reports/169629)\n- [OSS security Advisory](http://www.openwall.com/lists/oss-security/2016/11/03/1)\n"], "cvss_scores": [7.5], "snyk_cve_ids": ["CVE-2016-9122"], "modified_date": ["20201105"], "title": ["Signature Validation Bypass"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"], "vuln_commit_date_rules": ["<#2016-08-31T18:56:16Z"], "package_name": ["github.com/square/go-jose"], "fixed_in": ["1.1.0"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMSQUAREGOJOSE-540149"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/square/go-jose"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.0.5", "1.0.4", "1.0.1", "1.0.0", "1.0.2", "1.0.3"]}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMHOLTARCHIVERCMDARC-174728"], "references": ["Fix Commit:https://github.com/mholt/archiver/commit/8217ed3a206c0473b4ec1aff51375b398838073a", "GitHub PR 2:https://github.com/mholt/archiver/pull/203", "GitHub PR:https://github.com/mholt/archiver/pull/169", "Zip Slip Advisory:https://github.com/snyk/zip-slip-vulnerability", "Zip Slip Advisory:https://snyk.io/research/zip-slip-vulnerability"], "snyk_cwes": ["CWE-29"], "vertex_label": ["SCVE"], "description": ["## Overview\n\n[github.com/mholt/archiver/cmd/arc](https://github.com/mholt/archiver) is a cross-platform, multi-format archive utility and Go library.\n\n\nAffected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip)\nvia the `Unarchive` functions.\n\n## Details\nIt is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a ../../file.exe location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\r\n\r\nThe following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\r\n\r\n```\r\n\r\n+2018-04-15 22:04:29 ..... 19 19 good.txt\r\n\r\n+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys\r\n\r\n```\n\n## Remediation\n\nUpgrade `github.com/mholt/archiver/cmd/arc` to version 3.3.2 or higher.\n\n\n## References\n\n- [Fix Commit](https://github.com/mholt/archiver/commit/8217ed3a206c0473b4ec1aff51375b398838073a)\n\n- [GitHub PR](https://github.com/mholt/archiver/pull/169)\n\n- [GitHub PR 2](https://github.com/mholt/archiver/pull/203)\n\n- [Zip Slip Advisory](https://github.com/snyk/zip-slip-vulnerability)\n\n- [Zip Slip Advisory](https://snyk.io/research/zip-slip-vulnerability)\n"], "cvss_scores": [5.5], "snyk_cve_ids": ["CVE-2019-10743"], "modified_date": ["20201105"], "title": ["Arbitrary File Write via Archive Extraction (Zip Slip)"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"], "vuln_commit_date_rules": [">=#2018-11-07T21:02:36Z&<=#2019-04-22T18:43:41Z"], "package_name": ["github.com/mholt/archiver/cmd/arc"], "fixed_in": ["3.3.2"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMMHOLTARCHIVERCMDARC-174728"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/mholt/archiver"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["3.2.0", "3.1.0", "3.3.0", "3.0.1", "3.0.0", "3.1.1", "3.3.1"]}]