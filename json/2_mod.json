[{"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOGSGOGS-1018895"], "references": ["Advisory:https://www.fzi.de/en/news/news/detail-en/artikel/fsa-2020-3-schwachstelle-in-gitea-1125-und-gogs-0122-ermoeglicht-ausfuehrung-von-code-nach-authent/"], "snyk_cwes": ["CWE-94"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/gogs/gogs](https://github.com/gogs/gogs) is a painless self-hosted Git Service.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution. The git hook feature allows for authenticated remote code execution.\n## Remediation\nThere is no fixed version for `github.com/gogs/gogs`.\n## References\n- [Advisory](https://www.fzi.de/en/news/news/detail-en/artikel/fsa-2020-3-schwachstelle-in-gitea-1125-und-gogs-0122-ermoeglicht-ausfuehrung-von-code-nach-authent/)\n"], "cvss_scores": [7.2], "snyk_cve_ids": ["CVE-2020-15867"], "modified_date": ["20201105"], "title": ["Arbitrary Code Execution"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H/RL:U"], "vuln_commit_date_rules": ["*"], "package_name": ["github.com/gogs/gogs"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMGOGSGOGS-1018895"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/gogs/gogs"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [""], "versions": ["0.9.113", "0.6.9", "0.12.3", "0.11", "0.9.48", "0.12.2", "0.11.86", "0.11.34", "0.9.13", "0.5.13", "0.9.0", "0.8.0", "0.11.91", "0.11.43", "0.7.6", "0.11.4", "0.8.43", "0.8.10", "0.6.0", "0.9.141", "0.10.1", "0.9.71", "0.11.29", "0.7.0", "0.5.9", "0.11.53", "0.11.19", "0.10.18", "0.7.19", "0.10rc", "0.11.33", "0.10.8", "0.6.5", "0.12.1", "0.10", "0.11.79", "0.11.66", "0.9.128", "0.7.33", "0.7.22", "0.6.1", "0.12.0", "0.11rc", "0.6.15", "0.5.11", "0.9.97", "0.9.60", "0.9.46", "0.8.25", "0.6.3", "0.5.8"]}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMARGOPROJARGOCDUTILSESSION-564997"], "references": ["Argo CVEs:https://www.soluble.ai/blog/argo-cves-2020", "GitHub Commit:https://github.com/argoproj/argo-cd/commit/35a7350b7444bcaf53ee0bb11b9d8e3ae4b717a1", "GitHub PR:https://github.com/argoproj/argo-cd/pull/3215"], "snyk_cwes": ["CWE-203"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/argoproj/argo-cd/util/session](https://github.com/argoproj/argo-cd) is a Declarative continuous deployment for Kubernetes.\n\nAffected versions of this package are vulnerable to User Enumeration. It is possible for attackers to determine the usernames of valid (non-SSO) accounts within Argo.\n## Remediation\nUpgrade `github.com/argoproj/argo-cd/util/session` to version 1.5.1 or higher.\n## References\n- [Argo CVEs](https://www.soluble.ai/blog/argo-cves-2020)\n- [GitHub Commit](https://github.com/argoproj/argo-cd/commit/35a7350b7444bcaf53ee0bb11b9d8e3ae4b717a1)\n- [GitHub PR](https://github.com/argoproj/argo-cd/pull/3215)\n"], "cvss_scores": [5.3], "snyk_cve_ids": ["CVE-2020-11576"], "modified_date": ["20201105"], "title": ["User Enumeration"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:U/RL:O/RC:R"], "vuln_commit_date_rules": [">=#2020-04-02T16:34:43Z&<#2020-04-06T15:19:49Z"], "package_name": ["github.com/argoproj/argo-cd/util/session"], "fixed_in": ["1.5.1"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMARGOPROJARGOCDUTILSESSION-564997"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/argoproj/argo-cd"], "exploit": ["Unproven"], "patch_exists": [""], "fixable": [true], "versions": ["1.5.0"]}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKIALIKIALICONFIG-561353"], "references": ["GitHub Commit:https://github.com/kiali/kiali/commit/93f5cd0b6698e8fe8772afb8f35816f6c086aef1", "Redhat Bugzilla:https://bugzilla.redhat.com/show_bug.cgi?id=1810387"], "snyk_cwes": ["CWE-295"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/kiali/kiali/config](https://github.com/kiali/kiali) is a package part of Kiali project.\n\nAffected versions of this package are vulnerable to Insufficient Validation. A remote attacker could abuse this flaw by stealing a valid JWT cookie and using that to spoof a user session, possibly gaining privileges to view and alter the Istio configuration.\n## Remediation\nUpgrade `github.com/kiali/kiali/config` to version 1.16.0-snapshot.1 or higher.\n## References\n- [GitHub Commit](https://github.com/kiali/kiali/commit/93f5cd0b6698e8fe8772afb8f35816f6c086aef1)\n- [Redhat Bugzilla](https://bugzilla.redhat.com/show_bug.cgi?id=1810387)\n"], "cvss_scores": [5.9], "snyk_cve_ids": ["CVE-2020-1762"], "modified_date": ["20201105"], "title": ["Insufficient Validation"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"], "vuln_commit_date_rules": ["<#2020-03-25T18:40:02Z"], "package_name": ["github.com/kiali/kiali/config"], "fixed_in": ["1.16.0-snapshot.1"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMKIALIKIALICONFIG-561353"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/kiali/kiali"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.0.9", "1.0.2", "0.17.0", "0.14.0", "0.13.0", "0.12.0-snapshot.0", "0.9.0-snapshot.1", "0.8.0-snapshot.1", "1.9.1", "1.6.0", "1.4.2", "1.4.1", "0.20.0-snapshot.0", "0.19.0-snapshot.1", "0.11.0-snapshot.0", "0.10.0", "0.9.1", "0.7.0-snapshot.0", "1.12.10", "1.12.4", "1.11.0-snapshot.0", "1.7.0-snapshot.1", "1.0.0-snapshot.0", "0.18.0", "0.5.0", "1.3.1", "0.15.0", "0.14.0-snapshot.1", "0.11.0-snapshot.1", "0.6.0", "1.12.5", "1.12.1", "1.12.0-snapshot.1", "1.1.0-snapshot.1", "1.0.7", "0.21.0", "0.21.0-snapshot.2", "0.20.0", "1.12.8", "1.12.7", "1.7.0", "1.3.0-snapshot.0", "1.0.1", "0.17.0-snapshot.0", "1.16.0-snapshot.0", "1.9.0", "1.6.1", "1.4.0", "1.0.6", "0.20.0-snapshot.1", "0.17.0-snapshot.1", "0.11.0", "0.7.1", "1.14.0", "1.14.0-snapshot.1", "1.12.6", "1.10.0-snapshot.1", "1.4.0-snapshot.1", "1.4.0-snapshot.0", "1.3.0", "1.2.0-snapshot.1", "1.0.3", "1.0.0", "0.19.0", "0.19.0-snapshot.0", "0.10.1", "0.9.0-snapshot.0", "1.10.0-snapshot.0", "1.0.4", "0.18.1", "0.16.2", "0.8.1", "0.8.0", "0.4.0", "1.15.0", "1.15.0-snapshot.0", "1.12.9", "0.12.0", "0.8.0-snapshot.0", "1.11.0", "1.5.0", "1.2.0", "1.1.0", "1.0.11", "1.0.10", "0.12.0-snapshot.1", "0.9.0", "1.12.3", "1.12.2", "1.8.0", "1.8.0-snapshot.1", "1.6.0-snapshot.0", "1.5.0-snapshot.1", "0.15.0-snapshot.0", "1.15.1", "1.14.0-snapshot.0", "1.13.1", "1.13.0", "1.13.0-snapshot.1", "1.13.0-snapshot.0", "1.10.0", "1.0.5", "0.16.0-snapshot.1", "0.16.0-snapshot.0", "0.7.0", "0.1.0.Alpha", "0.9.1.helmfix", "1.15.2", "1.12.0-snapshot.2", "1.3.0-snapshot.1", "1.2.0-snapshot.0", "1.0.8", "0.16.0", "0.15.0-snapshot.1", "0.2.0.Alpha", "1.5.0-snapshot.0", "0.21.0-snapshot.0", "1.12.0", "1.8.0-snapshot.0", "0.21.0-snapshot.1", "0.16.1", "0.14.0-snapshot.0", "0.13.0-snapshot.1", "0.7.2"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-CODECLOUDFOUNDRYORGGROOTFSFETCHERLAYERFETCHER-50057"], "references": ["Cloudfoundry Security Advisory:https://www.cloudfoundry.org/cve-2017-14388/"], "snyk_cwes": ["CWE-20"], "vertex_label": ["SCVE"], "description": ["## Overview\r\n[`grootfs`](https://github.com/cloudfoundry/grootfs) is the Cloud Foundry component that provides filesystem isolation for containers and deals with container (Docker and OCI) images.\r\n\r\nAffected versions of this package are vulnerable to Cache Poisoning.\r\n\r\nCloud Foundry Foundation GrootFS release 0.3.x versions prior to 0.30.0 do not validate DiffIDs, allowing specially crafted images to poison the grootfs volume cache. For example, this could allow an attacker to provide an image layer that GrootFS would consider to be the Ubuntu base layer.\r\n\r\n## References\r\n- [Cloudfoundry Security Advisory](https://www.cloudfoundry.org/cve-2017-14388/)"], "cvss_scores": [7.8], "snyk_cve_ids": ["CVE-2017-14388"], "modified_date": ["20201105"], "title": ["Cache Poisoning"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"], "vuln_commit_date_rules": [">=#2016-11-03T16:45:10Z&<#2017-11-08T16:29:08Z"], "package_name": ["code.cloudfoundry.org/grootfs/fetcher/layer_fetcher"], "fixed_in": ["0.30.0"], "snyk_vuln_id": ["SNYK-GOLANG-CODECLOUDFOUNDRYORGGROOTFSFETCHERLAYERFETCHER-50057"], "snyk_pvt_vulnerability": [false], "module_name": ["code.cloudfoundry.org/grootfs", "github.com/cloudfoundry/grootfs"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["0.20.0", "0.16.0", "0.8.0", "0.4.0", "0.11.0", "0.12.0", "0.29.0", "0.3.0", "0.28.1", "0.17.0", "0.5.0", "0.25.0", "0.6.0", "0.24.0", "0.19.0", "0.13.0", "0.10.0", "0.7.0", "0.17.1", "0.18.0", "0.15.0", "0.9.0", "0.21.0", "0.14.0", "0.28.0", "0.27.0", "0.26.0"]}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMARGOPROJARGOCDUTILOIDC-572378"], "references": ["GitHub Commit:https://github.com/argoproj/argo-cd/commit/7e877b06989f251b7cb1d37deb4eb779260ae766", "GitHub PR:https://github.com/argoproj/argo-cd/pull/3773"], "snyk_cwes": ["CWE-79"], "vertex_label": ["SCVE"], "description": ["## Overview\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS). Login error description is not escaped before rendered.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser\u2019s Same Origin Policy.\n\n\u05bfInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they\u2019ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user\u2019s browser.| \n|**DOM-based**|Client|The attacker forces the user\u2019s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `github.com/argoproj/argo-cd/util/oidc` to version 1.5.8 or higher.\n## References\n- [GitHub Commit](https://github.com/argoproj/argo-cd/commit/7e877b06989f251b7cb1d37deb4eb779260ae766)\n- [GitHub PR](https://github.com/argoproj/argo-cd/pull/3773)\n"], "cvss_scores": [6.3], "modified_date": ["20201105"], "title": ["Cross-site Scripting (XSS)"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L/E:P/RL:U/RC:C"], "vuln_commit_date_rules": ["<#2020-06-15T21:39:23Z"], "package_name": ["github.com/argoproj/argo-cd/util/oidc"], "fixed_in": ["1.5.8"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMARGOPROJARGOCDUTILOIDC-572378"], "snyk_pvt_vulnerability": [true], "module_name": ["github.com/argoproj/argo-cd"], "exploit": ["Proof of Concept"], "patch_exists": [""], "fixable": [true], "versions": ["0.5.3", "0.8.2", "1.5.7", "0.11.0", "1.4.2", "0.11.2", "0.11.0-rc3", "0.10.3", "0.9.1", "0.4.0", "1.5.4", "1.5.0", "1.1.0-rc7", "1.1.0-rc3", "stable", "0.4.7", "0.7.0", "0.4.2", "0.3.2", "0.1.0", "0.10.1", "1.5.3", "1.5.0-rc1", "1.3.0-rc4", "1.2.0", "0.12.2", "0.12.0", "0.12.0-rc4", "1.1.0-rc6", "0.12.1", "0.11.0-rc2", "0.11.0-rc1", "1.2.1", "0.12.0-rc1", "1.5.1", "1.5.0-rc3", "1.4.0", "1.3.6", "1.3.0-rc3", "1.2.2", "1.1.0", "1.1.0-rc4", "0.12.0-rc5", "0.11.1", "0.11.0-rc6", "0.11.0-rc5", "0.8.1", "0.10.2", "0.4.3", "0.5.0", "0.4.0-alpha1", "0.4.5", "1.4.3", "1.2.3", "1.2.0-rc2", "1.1.2", "1.0.2", "1.0.0", "1.0.0-rc3", "1.0.0-rc2", "1.0.0-rc1", "0.12.0-rc6", "1.4.0-rc1", "1.3.5", "1.2.4", "1.5.0-rc2", "1.3.4", "1.3.2", "1.3.0-rc5", "1.3.0-rc1", "1.1.0-rc8", "1.0.1", "0.11.0-rc4", "0.3.1", "0.8.0", "0.10.4", "1.3.0", "1.1.0-rc5", "1.5.5", "1.1.1", "1.1.0-rc2", "0.12.0-rc3", "0.5.2", "0.5.1", "0.5.4", "0.10.6", "0.6.1", "0.3.3", "0.2.0", "0.9.0", "0.7.1", "0.6.0", "0.9.2", "0.10.0", "1.3.3", "1.2.0-rc1", "0.12.3", "0.4.6", "0.4.4", "0.4.1", "0.10.5", "0.3.0", "0.12.0-rc2", "1.5.6", "1.5.2", "1.4.1", "1.3.1", "1.3.0-rc2", "1.2.5", "1.1.0-rc1", "0.6.2", "0.7.2"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMJAEGERTRACINGJAEGERPKGKAFKAAUTH-674508"], "references": ["GitHub Commit:https://github.com/jaegertracing/jaeger/commit/360c38bec3f9718ebba7ddbf0b409b05995f3ace", "RedHat Bugzilla Bug:https://bugzilla.redhat.com/show_bug.cgi?id=1838401"], "snyk_cwes": ["CWE-200"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/jaegertracing/jaeger/pkg/kafka/auth](https://github.com/jaegertracing/jaeger) is a distributed tracing platform.\n\nAffected versions of this package are vulnerable to Information Exposure. Sensitive information is written to a log file when the Kafka data store is used. This flaw allows an attacker with access to the containers log file to discover the Kafka credentials.\n## Remediation\nUpgrade `github.com/jaegertracing/jaeger/pkg/kafka/auth` to version 1.18.1 or higher.\n## References\n- [GitHub Commit](https://github.com/jaegertracing/jaeger/commit/360c38bec3f9718ebba7ddbf0b409b05995f3ace)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1838401)\n"], "cvss_scores": [7.1], "snyk_cve_ids": ["CVE-2020-10750"], "modified_date": ["20201105"], "title": ["Information Exposure"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"], "vuln_commit_date_rules": ["<#2020-06-19T08:10:21Z"], "package_name": ["github.com/jaegertracing/jaeger/pkg/kafka/auth"], "fixed_in": ["1.18.1"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMJAEGERTRACINGJAEGERPKGKAFKAAUTH-674508"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/jaegertracing/jaeger"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.8.2", "1.4.0", "0.7.0", "0.5.0", "1.18.0", "1.10.1", "1.0.0", "0.6.0", "1.11.0", "0.5.1", "1.2.0", "1.13.0", "1.9.0", "1.17.1", "0.5.2", "1.8.1", "1.17.0", "1.5.0", "1.3.0", "1.6.0", "0.8.0", "1.4.1", "1.15.0", "1.15.1", "1.8.0", "1.10.0", "1.1.0", "1.12.0", "1.16.0", "0.9.0", "1.7.0", "1.13.1", "1.14.0"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCOREOSETCDPKGHTTPUTIL-50069"], "references": ["GitHub Commit:https://github.com/coreos/etcd/commit/a7e5790c82039945639798ae9a3289fe787f5e56", "GitHub Issue:https://github.com/coreos/etcd/issues/9353"], "snyk_cwes": ["CWE-352"], "vertex_label": ["SCVE"], "description": ["## Overview\r\n[github.com/coreos/etcd/pkg/httputil](https://github.com/coreos/etcd) is a distributed reliable key-value store for the most critical data of a distributed system.\r\n\r\nAffected versions of this package are vulnerable to Cross-site Request Forgery (CSRF). An attacker can set up a website that tries to send a POST request to the etcd server and modify a key. Adding a key is done with PUT so it is theoretically safe (cant PUT from an HTML form or such) but POST allows creating in-order keys that an attacker can send.\r\n\r\n## Remediation\r\nUpgrade `github.com/coreos/etcd/pkg/httputil` to version 3.4 or higher.\r\n\r\n## References\r\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2018-1098)\r\n- [GitHub Issue](https://github.com/coreos/etcd/issues/9353)\r\n- [GitHub Commit](https://github.com/coreos/etcd/commit/a7e5790c82039945639798ae9a3289fe787f5e56)"], "cvss_scores": [8.8], "snyk_cve_ids": ["CVE-2018-1098"], "modified_date": ["20201105"], "title": ["Cross-site Request Forgery (CSRF)"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"], "vuln_commit_date_rules": [">=#2015-08-25T15:54:13Z&<#2018-03-01T04:38:23Z"], "package_name": ["github.com/coreos/etcd/pkg/httputil"], "fixed_in": ["3.4"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMCOREOSETCDPKGHTTPUTIL-50069"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/coreos/etcd"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["3.3.14-beta.0", "0.2.0", "3.4.0-rc.4", "0.5.0-alpha.0", "0.2.0-rc4", "0.4.7", "0", "0.4.2", "2.1.0-alpha.1", "2.0.4", "3.3.13", "3.3.4", "3.1.0-rc.0", "3.0.3", "3.1.19", "3.1.15", "3.1.5", "3.1.0", "0.5.0-alpha.4", "2.0.0", "2.0.0-rc.1", "2.1.2", "3.3.1", "3.2.1", "3.1.14", "3.0.14", "3.0.4", "3.4.0-rc.1", "0.4.0", "2.0.1", "0.5.0-alpha.1", "0.3.0", "3.3.22", "3.3.2", "3.2.16", "3.1.10", "3.3.25", "3.3.21", "3.2.29", "2.3.6", "2.3.1", "3.3.20", "3.2.14", "3.2.0-rc.1", "3.0.7", "3.3.0-rc.2", "3.2.25", "3.2.21", "3.2.12", "3.2.0", "3.1.20", "3.1.13", "3.1.8", "3.1.7", "3.1.1", "3.1.0-rc.1", "3.0.6", "0.5.0-alpha.5", "3.4.0-rc.3", "2.0.3", "2.0.7", "2.0.5", "2.0.13", "2.0.11", "2.0.2", "3.3.14-rc.0", "0.2.0-rc3", "0.4.5", "0.2.0-rc2", "0.4.6", "3.3.0-rc.3", "3.2.26", "3.2.10", "3.2.4", "3.2.2", "3.0.15", "2.2.3", "3.3.9", "3.3.0-rc.0", "3.2.27", "3.2.8", "3.1.18", "3.1.4", "2.3.5", "2.3.3", "3.1.12", "3.1.11", "3.0.13", "3.0.11", "3.3.24", "3.3.18", "3.3.0-rc.4", "3.2.20", "3.2.6", "3.1.17", "3.1.9", "3.1.6", "2.3.8", "2.3.2", "2.2.0", "2.0.6", "0.5.0-alpha.2", "3.2.3", "3.1.0-alpha.0", "3.0.9", "2.3.4", "2.3.0-alpha.0", "2.2.1", "3.3.16", "3.2.31", "3.2.24", "3.2.19", "3.1.0-alpha.1", "3.0.0", "2.3.0-alpha.1", "0.5.0-alpha.3", "2.0.10", "0.4.9", "2.0.12", "2.1.1", "0.2.0-rc0", "2.2.0-alpha.1", "3.4.0-rc.0", "2.1.3", "0.4.8", "3.3.23", "2.2.0-alpha.0", "2.0.8", "2.1.0", "3.3.19", "3.3.14", "2.1.0-rc.0", "0.4.1", "0.2.0-rc1", "0.1.0", "0.1.2", "2.0.9", "2.1.0-alpha.0", "0.4.3", "3.3.10", "3.3.5", "3.2.30", "3.2.9", "3.0.12", "3.0.2", "3.3.12", "3.3.11", "3.3.8", "3.2.11", "3.2.7", "3.1.3", "3.0.10", "2.2.5", "0.1.1", "0.4.4", "3.4.0-rc.2"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GOLANGORGXCRYPTOSSH-551923"], "references": ["Exploit DB:https://www.exploit-db.com/exploits/48121", "GitHub Fix Commit:https://github.com/golang/crypto/commit/bac4c82f69751a6dd76e702d54b3ceb88adab236", "Google Forums:https://groups.google.com/forum/%23%21topic/golang-announce/3L45YRc91SY"], "snyk_cwes": ["CWE-347"], "vertex_label": ["SCVE"], "description": ["## Overview\n[golang.org/x/crypto/ssh](https://pkg.go.dev/golang.org/x/crypto/ssh?tab=doc) is a SSH client and server\n\nAffected versions of this package are vulnerable to Improper Signature Verification. An attacker can craft an `ssh-ed25519` or `sk-ssh-...@openssh.com` public key, such that the library will panic when trying to verify a signature with it. Clients can deliver such a public key and signature to any `golang.org/x/crypto/ssh` server with a `PublicKeyCallback`, and servers can deliver them to any `golang.org/x/crypto/ssh` client.\n## Remediation\nUpgrade `golang.org/x/crypto/ssh` to version 0.0.0-20200220183623-bac4c82f6975 or higher.\n## References\n- [Exploit DB](https://www.exploit-db.com/exploits/48121)\n- [GitHub Fix Commit](https://github.com/golang/crypto/commit/bac4c82f69751a6dd76e702d54b3ceb88adab236)\n- [Google Forums](https://groups.google.com/forum/#!topic/golang-announce/3L45YRc91SY)\n"], "cvss_scores": [8.2], "snyk_cve_ids": ["CVE-2020-9283"], "modified_date": ["20201105"], "title": ["Improper Signature Verification"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:N/E:P/RL:O/RC:R"], "vuln_commit_date_rules": ["<#2020-02-20T18:36:23Z"], "package_name": ["golang.org/x/crypto/ssh"], "fixed_in": ["0.0.0-20200220183623-bac4c82f6975"], "snyk_vuln_id": ["SNYK-GOLANG-GOLANGORGXCRYPTOSSH-551923"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/golang/crypto", "golang.org/x/crypto"], "exploit": ["Proof of Concept"], "patch_exists": [""], "fixable": [true], "versions": []}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDOCUMIZECOMMUNITYDOMAINSECTIONMARKDOWN-536837"], "references": ["GitHub Commit:https://github.com/documize/community/commit/a4384210d4d0d6b18e6fdb7e155de96d4a1cf9f3", "GitHub Comparison:https://github.com/documize/community/compare/v3.5.0...v3.5.1", "GitHub Release:https://github.com/documize/community/releases/tag/v3.5.1"], "snyk_cwes": ["CWE-79"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/documize/community/domain/section/markdown](https://godoc.org/github.com/documize/community/domain/section/markdown) is a markdown extention for Documize.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS). It mishandles untrusted Markdown content. This was addressed by adding the bluemonday HTML sanitizer to defend against XSS.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser\u2019s Same Origin Policy.\n\n\u05bfInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they\u2019ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user\u2019s browser.| \n|**DOM-based**|Client|The attacker forces the user\u2019s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `github.com/documize/community/domain/section/markdown` to version 3.5.1 or higher.\n## References\n- [GitHub Commit](https://github.com/documize/community/commit/a4384210d4d0d6b18e6fdb7e155de96d4a1cf9f3)\n- [GitHub Comparison](https://github.com/documize/community/compare/v3.5.0...v3.5.1)\n- [GitHub Release](https://github.com/documize/community/releases/tag/v3.5.1)\n"], "cvss_scores": [8.3], "snyk_cve_ids": ["CVE-2019-19619"], "modified_date": ["20201105"], "title": ["Cross-site Scripting (XSS)"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:L"], "vuln_commit_date_rules": ["<#2019-11-30T10:31:09Z"], "package_name": ["github.com/documize/community/domain/section/markdown"], "fixed_in": ["3.5.1"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMDOCUMIZECOMMUNITYDOMAINSECTIONMARKDOWN-536837"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/documize/community"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.59.1", "1.54.1", "1.65.3", "1.53.1", "1.70.0", "0.27.0"]}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMOPENCONTAINERSRUNCLIBCONTAINER-575144"], "references": ["GitHub Advisory:https://github.com/opencontainers/runc/security/advisories/GHSA-g54h-m393-cpwq", "GitHub PR:https://github.com/opencontainers/runc/pull/2391", "GitHub Release:https://github.com/opencontainers/runc/releases/tag/v1.0.0-rc91"], "snyk_cwes": ["CWE-264"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/opencontainers/runc/libcontainer](https://www.opencontainers.org/) is a package for a modern container runtime.\n\nAffected versions of this package are vulnerable to Privilege Escalation. `runc`s implementation of the `linux.resources.devices` list was a black-list by default. This means that users who created their own `config.json` objects and didnt prefix a deny-all rule (`{allow: false, permissions: rwm}` or equivalent) were not provided protection by the devices cgroup. This would allow malicious containers (with sufficient privileges) to create arbitrary device inodes (assuming they have CAP_MKNOD) and operate on any device inodes they may have access to (assuming they have regular Unix DAC permissions).\r\n\r\nHowever, most (if not all) programs that make use of `runc` include this deny-all rule. This was most likely added before the specification mandated a white-list of devices, and the fact that all programs wrote their own deny-all rule obscured the existence of this bug for several years. In fact, even the specifications examples include a default deny-all rule! We therefore believe that while this is a security bug (and has been fixed as such), it was almost certainly not exploitable in the wild due to the inclusion of default deny-all rules by all known users of runc -- hence why this advisory has low severity.\n## Remediation\nUpgrade `github.com/opencontainers/runc/libcontainer` to version 1.0.0-rc91 or higher.\n## References\n- [GitHub Advisory](https://github.com/opencontainers/runc/security/advisories/GHSA-g54h-m393-cpwq)\n- [GitHub PR](https://github.com/opencontainers/runc/pull/2391)\n- [GitHub Release](https://github.com/opencontainers/runc/releases/tag/v1.0.0-rc91)\n"], "cvss_scores": [6.6], "modified_date": ["20201105"], "title": ["Privilege Escalation"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H"], "vuln_commit_date_rules": ["<#2020-07-02T00:55:24Z"], "package_name": ["github.com/opencontainers/runc/libcontainer"], "fixed_in": ["1.0.0-rc91"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMOPENCONTAINERSRUNCLIBCONTAINER-575144"], "snyk_pvt_vulnerability": [true], "module_name": ["github.com/opencontainers/runc"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.0.0-rc90", "0.0.8", "0.0.2", "0.1.1", "1.0.0-rc1", "1.0.0-rc6", "1.0.0-rc2", "0.0.1", "0.0.2.1", "1.0.0-rc7", "1.0.0-rc3", "0.0.6", "1.0.0-rc8", "1.0.0-rc5", "1.0.0-rc4", "1.0.0-rc10", "1.0.0-rc9", "0.0.7", "0.0.4", "0.1.0", "0.0.9", "0.0.5", "0.0.3"]}]