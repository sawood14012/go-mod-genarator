[{"severity": ["critical"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-K8SIOKUBERNETESPLUGINPKGADMISSIONSECURITYPODSECURITYPOLICY-174813"], "references": ["GitHub Commit:https://github.com/kubernetes/kubernetes/commit/7fef0a4f6a44ea36f166c39fdade5324eff2dd5e", "GitHub Issue:https://github.com/kubernetes/kubernetes/issues/43459"], "snyk_cwes": ["CWE-265"], "vertex_label": ["SCVE"], "description": ["## Overview\n[k8s.io/kubernetes/plugin/pkg/admission/security/podsecuritypolicy](https://godoc.org/k8s.io/kubernetes/plugin/pkg/admission/security/podsecuritypolicy) is a PodSecurityPolicy admission plugin for Kubernetes.\n\nAffected versions of this package are vulnerable to Privilege Escalation resulting in the ability to make use of any existing PodSecurityPolicy object.\n## Remediation\nUpgrade `k8s.io/kubernetes/plugin/pkg/admission/security/podsecuritypolicy` to version 1.5.5 or higher.\n## References\n- [GitHub Commit](https://github.com/kubernetes/kubernetes/commit/7fef0a4f6a44ea36f166c39fdade5324eff2dd5e)\n- [GitHub Issue](https://github.com/kubernetes/kubernetes/issues/43459)\n"], "cvss_scores": [9.8], "snyk_cve_ids": ["CVE-2017-1000056"], "modified_date": ["20201105"], "title": ["Privilege Escalation"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"], "vuln_commit_date_rules": [">=#2016-11-08T13:36:27Z&<#2017-03-15T02:49:07Z"], "package_name": ["k8s.io/kubernetes/plugin/pkg/admission/security/podsecuritypolicy"], "fixed_in": ["1.5.5"], "snyk_vuln_id": ["SNYK-GOLANG-K8SIOKUBERNETESPLUGINPKGADMISSIONSECURITYPODSECURITYPOLICY-174813"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/kubernetes/kubernetes", "k8s.io/kubernetes"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.5.1", "1.5.4", "1.5.2-beta.0", "1.5.4-beta.0", "1.5.2", "1.5.3", "1.5.3-beta.0", "1.5.5-beta.0", "1.5.1-beta.0", "1.5.0"]}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMAPPCDOCKER2ACILIB-50031"], "references": ["GitHub Commit:https://github.com/appc/docker2aci/commit/2ab8826d6957d97ed64e5e29a484af6370eae2e1", "GitHub Issue:https://github.com/appc/docker2aci/issues/201", "GitHub Release:https://github.com/appc/docker2aci/releases/tag/v0.13.0", "OSS security Advisory:http://www.openwall.com/lists/oss-security/2016/09/28/2"], "snyk_cwes": ["CWE-22"], "vertex_label": ["SCVE"], "description": ["## Overview\r\nAffected version of [`github.com/appc/docker2aci`](https://github.com/appc/docker2aci) are vulnerable to Directory Traversal.\r\nDirectory traversal vulnerability in docker2aci before 0.13.0 allows remote attackers to write to arbitrary files via a .. (dot dot) in the embedded layer data in an image.\r\n\r\n## Details\r\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with dot-dot-slash (../) sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\r\n\r\nDirectory Traversal vulnerabilities can be generally divided into two types:\r\n\r\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\r\n\r\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\r\n\r\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\r\n\r\n```\r\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\r\n```\r\n**Note** `%2e` is the URL encoded version of `.` (dot).\r\n\r\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \r\n\r\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\r\n\r\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\r\n\r\n```\r\n2018-04-15 22:04:29 .....           19           19  good.txt\r\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\r\n```\r\n\r\n\r\n## References\r\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-7569)\r\n- [GitHub Issue](https://github.com/appc/docker2aci/issues/201)\r\n- [GitHub Commit](https://github.com/appc/docker2aci/commit/2ab8826d6957d97ed64e5e29a484af6370eae2e1)\r\n- [GitHub Changelog](https://github.com/appc/docker2aci/releases/tag/v0.13.0)\r\n- [Openwall](http://www.openwall.com/lists/oss-security/2016/09/28/2)"], "cvss_scores": [5.5], "snyk_cve_ids": ["CVE-2016-7569"], "modified_date": ["20201105"], "title": ["Directory Traversal"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"], "vuln_commit_date_rules": [">=#2016-02-24T12:57:26Z&<#2016-10-14T14:06:00Z"], "package_name": ["github.com/appc/docker2aci/lib"], "fixed_in": ["0.13.0"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMAPPCDOCKER2ACILIB-50031"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/appc/docker2aci"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["0.11.0", "0.12.2", "0.12.0", "0.9.1", "0.10.0", "0.12.1", "0.9.3", "0.9.2", "0.9.0", "0.12.3", "0.11.1"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMJAEGERTRACINGJAEGERPKGKAFKAAUTH-674508"], "references": ["GitHub Commit:https://github.com/jaegertracing/jaeger/commit/360c38bec3f9718ebba7ddbf0b409b05995f3ace", "RedHat Bugzilla Bug:https://bugzilla.redhat.com/show_bug.cgi?id=1838401"], "snyk_cwes": ["CWE-200"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/jaegertracing/jaeger/pkg/kafka/auth](https://github.com/jaegertracing/jaeger) is a distributed tracing platform.\n\nAffected versions of this package are vulnerable to Information Exposure. Sensitive information is written to a log file when the Kafka data store is used. This flaw allows an attacker with access to the containers log file to discover the Kafka credentials.\n## Remediation\nUpgrade `github.com/jaegertracing/jaeger/pkg/kafka/auth` to version 1.18.1 or higher.\n## References\n- [GitHub Commit](https://github.com/jaegertracing/jaeger/commit/360c38bec3f9718ebba7ddbf0b409b05995f3ace)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1838401)\n"], "cvss_scores": [7.1], "snyk_cve_ids": ["CVE-2020-10750"], "modified_date": ["20201105"], "title": ["Information Exposure"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"], "vuln_commit_date_rules": ["<#2020-06-19T08:10:21Z"], "package_name": ["github.com/jaegertracing/jaeger/pkg/kafka/auth"], "fixed_in": ["1.18.1"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMJAEGERTRACINGJAEGERPKGKAFKAAUTH-674508"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/jaegertracing/jaeger"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.8.2", "1.4.0", "0.7.0", "0.5.0", "1.18.0", "1.10.1", "1.0.0", "0.6.0", "1.11.0", "0.5.1", "1.2.0", "1.13.0", "1.9.0", "1.17.1", "0.5.2", "1.8.1", "1.17.0", "1.5.0", "1.3.0", "1.6.0", "0.8.0", "1.4.1", "1.15.0", "1.15.1", "1.8.0", "1.10.0", "1.1.0", "1.12.0", "1.16.0", "0.9.0", "1.7.0", "1.13.1", "1.14.0"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDOCKERDOCKER-50007"], "references": ["Docker Security:https://groups.google.com/forum/%23%21msg/docker-user/nFAz-B-n4Bw/0wr3wvLsnUwJ", "GitHub Comparison:https://github.com/docker/docker/compare/aef842e7dfb534aba22c3c911de525ce9ac12b72...313a1b7620910e47d888f8b0a6a5eb06ad9c1ff2", "NVD:https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-9357"], "snyk_cwes": ["CWE-264"], "vertex_label": ["SCVE"], "description": ["## Overview\nAffected version of [`github.com/docker/docker`](https://github.com/docker/docker) are vulnerable to Arbitrary Code Execution attacks.\nDocker 1.3.2 allows remote attackers to execute arbitrary code with root privileges via a crafted (1) image or (2) build in a Dockerfile in an LZMA (.xz) archive, related to the chroot for archive extraction.\n\n## References\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-9357)\n- [GitHub Commit](https://github.com/docker/docker/compare/aef842e7dfb534aba22c3c911de525ce9ac12b72...313a1b7620910e47d888f8b0a6a5eb06ad9c1ff2)\n- [Docker Security](https://groups.google.com/forum/#%21msg/docker-user/nFAz-B-n4Bw/0wr3wvLsnUwJ)\n"], "cvss_scores": [9.8], "snyk_cve_ids": ["CVE-2014-9357"], "modified_date": ["20201105"], "title": ["Arbitrary Code Execution"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"], "vuln_commit_date_rules": [">=#2014-11-11T21:20:02Z&<#2014-12-09T19:56:16Z"], "package_name": ["github.com/docker/docker"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMDOCKERDOCKER-50007"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/docker/docker"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [""], "versions": ["1.3.3"]}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-K8SIOKUBERNETES-50019"], "references": ["GitHub Commit:https://github.com/kubernetes/kubernetes/commit/68f2add9bd5d43b9da1424d87d88f83d120e17d0", "NVD:https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-5305", "RHSA Security Advisory:https://access.redhat.com/errata/RHSA-2015:1945"], "snyk_cwes": ["CWE-22"], "vertex_label": ["SCVE"], "description": ["## Overview\nAffected version of [`github.com/kubernetes/kubernetes`](https://github.com/kubernetes/kubernetes) are vulnerable to Directory Traversal.\nDirectory traversal vulnerability in Kubernetes, as used in Red Hat OpenShift Enterprise 3.0, allows attackers to write to arbitrary files via a crafted object type name, which is not properly handled before passing it to etcd.\n\n## Details\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with dot-dot-slash (../) sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\r\n\r\nDirectory Traversal vulnerabilities can be generally divided into two types:\r\n\r\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\r\n\r\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\r\n\r\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\r\n\r\n```\r\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\r\n```\r\n**Note** `%2e` is the URL encoded version of `.` (dot).\r\n\r\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \r\n\r\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\r\n\r\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\r\n\r\n```\r\n2018-04-15 22:04:29 .....           19           19  good.txt\r\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\r\n```\n\n\n## References\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-5305)\n- [GitHub Commit](https://github.com/kubernetes/kubernetes/commit/68f2add9bd5d43b9da1424d87d88f83d120e17d0)\n- [Redhat Security Advisory](https://access.redhat.com/errata/RHSA-2015:1945)\n"], "cvss_scores": [6.5], "snyk_cve_ids": ["CVE-2015-5305"], "modified_date": ["20201105"], "title": ["Directory Traversal"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L"], "vuln_commit_date_rules": [">=#2015-02-02T19:44:53Z&<#2015-10-28T22:56:18Z"], "package_name": ["k8s.io/kubernetes"], "fixed_in": ["1.1.1"], "snyk_vuln_id": ["SNYK-GOLANG-K8SIOKUBERNETES-50019"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/kubernetes/kubernetes", "k8s.io/kubernetes"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["0.19.1", "1.1.0-alpha.1", "0.19.2", "0.18.2", "0.7.1", "0.4.1", "0.16.2", "0.14.0", "0.6.1", "0.4.2", "0.21.2", "0.20.1", "0.18.0", "0.9.2", "0.9.1", "0.8.4", "0.8.2", "0.5.5", "0.4.3", "0.21.0", "0.20.0", "1.1.1-beta.0", "0.21.4", "0.16.1", "0.8.1", "0.8.0", "0.5.1", "1.1.0-beta", "1.0.5", "1.0.3", "0.21.1", "0.15.0", "0.3", "1.0.1", "0.17.0", "0.16.0", "0.14.2", "0.13.1", "0.5.3", "0.5.2", "0.4.4", "1.0.6", "1.1.0", "1.0.4", "0.13.2", "0.9.3", "1.1.1-beta", "0.21.3", "0.20.2", "0.19.0", "0.9.0", "0.7.2", "0.5.4", "1.1.0-alpha.0", "1.0.8-beta", "1.0.0", "0.19.3", "0.7.3", "0.18.1", "0.17.1", "0.2", "0.4", "1.0.2", "0.14.1", "0.12.0", "0.7.4", "0.5", "1.0.7", "0.12.2", "0.11.0", "0.10.1", "1.1.1-beta.1", "0.13.1-de", "0.13.0", "0.12.1", "0.10.0", "0.7.0", "0.6.2", "0.6.0", "0.5.6"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOAAHAAH-559113"], "references": ["GItHub Issue:https://github.com/go-aah/aah/issues/266", "GitHub Commit:https://github.com/go-aah/aah/pull/267/commits/2c8f53fa7d3affbc79a1153773cb9d0607085b01", "GitHub PR:https://github.com/go-aah/aah/pull/267"], "snyk_cwes": ["CWE-23"], "vertex_label": ["SCVE"], "description": ["## Overview\n\n[github.com/go-aah/aah](https://github.com/go-aah/aah) is a Go web framework.\n\n\nAffected versions of this package are vulnerable to Directory Traversal\nvia static file delivery.\n\n## Details\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with dot-dot-slash (../) sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\r\n\r\nDirectory Traversal vulnerabilities can be generally divided into two types:\r\n\r\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\r\n\r\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\r\n\r\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\r\n\r\n```\r\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\r\n```\r\n**Note** `%2e` is the URL encoded version of `.` (dot).\r\n\r\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \r\n\r\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\r\n\r\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\r\n\r\n```\r\n2018-04-15 22:04:29 .....           19           19  good.txt\r\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\r\n```\n\n## Remediation\n\nUpgrade `github.com/go-aah/aah` to version 0.12.4 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/go-aah/aah/pull/267/commits/2c8f53fa7d3affbc79a1153773cb9d0607085b01)\n\n- [GItHub Issue](https://github.com/go-aah/aah/issues/266)\n\n- [GitHub PR](https://github.com/go-aah/aah/pull/267)\n"], "cvss_scores": [7.5], "modified_date": ["20201105"], "title": ["Directory Traversal"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:U/RL:O/RC:C"], "vuln_commit_date_rules": ["<#2020-03-03T09:27:03Z"], "package_name": ["github.com/go-aah/aah"], "fixed_in": ["0.12.4"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMGOAAHAAH-559113"], "snyk_pvt_vulnerability": [true], "module_name": ["github.com/go-aah/aah"], "exploit": ["Unproven"], "patch_exists": [""], "fixable": [true], "versions": ["0.12.3", "0.11.1", "0.6", "0.10", "0.12.2", "0.11.4", "0.11.2", "0.11.0", "0.5.1", "0.11.3", "0.4.1", "0.2", "0.12.1", "0.8", "0.5", "0.3", "0.10.1", "0.9", "0.7", "0.4", "0.12.0", "0.1"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMSQUAREGOJOSE-540149"], "references": ["GitHub Commit:https://github.com/square/go-jose/commit/2c5656adca9909843c4ff50acf1d2cf8f32da7e6", "HackerOne Report:https://hackerone.com/reports/169629", "OSS security Advisory:http://www.openwall.com/lists/oss-security/2016/11/03/1"], "snyk_cwes": ["CWE-284"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/square/go-jose](https://github.com/square/go-jose) is a Package that aims to provide an implementation of the Javascript Object Signing and Encryption set of standards.\n\nAffected versions of this package are vulnerable to Signature Validation Bypass. The go-jose library supports messages with multiple signatures. However, when validating a signed message the API did not indicate which signature was valid, which could potentially lead to confusion. For example, users of the library might mistakenly read protected header values from an attached signature that was different from the one originally validated.\n## Remediation\nUpgrade `github.com/square/go-jose` to version 1.1.0 or higher.\n## References\n- [GitHub Commit](https://github.com/square/go-jose/commit/2c5656adca9909843c4ff50acf1d2cf8f32da7e6)\n- [HackerOne Report](https://hackerone.com/reports/169629)\n- [OSS security Advisory](http://www.openwall.com/lists/oss-security/2016/11/03/1)\n"], "cvss_scores": [7.5], "snyk_cve_ids": ["CVE-2016-9122"], "modified_date": ["20201105"], "title": ["Signature Validation Bypass"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"], "vuln_commit_date_rules": ["<#2016-08-31T18:56:16Z"], "package_name": ["github.com/square/go-jose"], "fixed_in": ["1.1.0"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMSQUAREGOJOSE-540149"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/square/go-jose"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.0.5", "1.0.4", "1.0.1", "1.0.0", "1.0.2", "1.0.3"]}, {"severity": ["low"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHELMHELMPKGREPO-1009822"], "references": ["GitHub Advisory:https://github.com/helm/helm/security/advisories/GHSA-jm56-5h66-w453", "GitHub Commit:https://github.com/helm/helm/commit/055dd41cbe53ce131ab0357524a7f6729e6e40dc", "GitHub Commit:https://github.com/helm/helm/commit/6aab63765f99050b115f0aec3d6350c85e8da946"], "snyk_cwes": ["CWE-20"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/helm/helm/pkg/repo](https://pkg.go.dev/github.com/helm/helm/pkg/repo) is a package manager for kubernetes.\n\nAffected versions of this package are vulnerable to Improper Input Validation. A Helm repository can contain duplicates of the same chart, with the last one always used. If a repository is compromised, this lowers the level of access that an attacker needs to inject a bad chart into a repository. To perform this attack, an attacker must have write access to the index file (which can occur during a MITM attack on a non-SSL connection).\n## Remediation\nUpgrade `github.com/helm/helm/pkg/repo` to version 2.16.11, 3.3.2 or higher.\n## References\n- [GitHub Advisory](https://github.com/helm/helm/security/advisories/GHSA-jm56-5h66-w453)\n- [GitHub Commit](https://github.com/helm/helm/commit/055dd41cbe53ce131ab0357524a7f6729e6e40dc)\n- [GitHub Commit](https://github.com/helm/helm/commit/6aab63765f99050b115f0aec3d6350c85e8da946)\n"], "cvss_scores": [2.2], "snyk_cve_ids": ["CVE-2020-15185"], "modified_date": ["20201105"], "title": ["Improper Input Validation"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:L/A:N"], "vuln_commit_date_rules": ["<#2020-09-17T19:56:07Z,>=#2019-11-13T13:35:15Z&<#2020-09-17T19:23:34Z"], "package_name": ["github.com/helm/helm/pkg/repo"], "fixed_in": ["2.16.11", "3.3.2"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMHELMHELMPKGREPO-1009822"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/helm/helm"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["2.16.6", "2.12.1", "2.14.0-rc.2", "3.2.0", "2.9.0-rc4", "2.3.1", "2.12.2", "2.15.0-rc.1", "2.4.1", "2.7.2", "2.13.0-rc.1", "2.1.1", "2.14.0", "2.6.2", "2.4.2", "2.11.0-rc.2", "3.1.0-rc.2", "2.16.8", "3.1.0-rc.1", "2.11.0-rc.1", "2.10.0-rc.1", "3.3.0-rc.2", "2.15.1", "2.2.0", "2.14.1", "3.3.0", "2.15.0-rc.2", "3.2.2", "2.13.1", "2.9.0-rc3", "2.14.3", "3.2.3", "2.6.0", "2.16.0", "2.11.0", "2.10.0-rc.3", "3.0.0", "2.16.3", "2.12.3", "2.14.0-rc.1", "2.8.1", "2.1.2", "3.2.1", "2.5.0", "2.3.0", "3.1.0", "2.0.0", "2.2.2", "2.2.1", "2.1.3", "2.12.0-rc.1", "2.10.0", "3.1.0-rc.3", "2.16.0-rc.1", "3.2.0-rc.1", "2.16.4", "3.1.1", "2.9.0-rc1", "2.7.0-rc1", "3.0.1", "2.12.0-rc.2", "3.0.2", "2.10.0-rc.2", "2.0.1", "2.15.0", "2.14.2", "2.15.2", "2.2.3", "2.0.2", "2.9.0", "2.13.0-rc.2", "2.13.1-rc.1", "2.16.5", "3.1.3", "2.8.0", "2.7.1", "3.2.4", "2.9.0-rc2", "2.4.0", "2.13.0", "2.8.0-rc.1", "2.5.1", "2.12.0", "2.16.1", "2.6.1", "2.8.2", "2.9.1", "2.7.0", "2.11.0-rc.3", "2.16.10", "3.3.1", "2.11.0-rc.4", "2.16.9", "2.1.0", "2.9.0-rc5", "3.0.3", "3.3.0-rc.1", "2.16.7", "2.16.2", "3.1.2", "2.8.2-rc1", "2.16.0-rc.2"]}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMOPENCONTAINERSRUNCLIBCONTAINER-540485"], "references": ["GitHub Issue:https://github.com/opencontainers/runc/issues/2197", "GitHub PR:https://github.com/opencontainers/runc/pull/2190", "GitHub PR:https://github.com/opencontainers/runc/pull/2207"], "snyk_cwes": ["CWE-362"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/opencontainers/runc/libcontainer](https://www.opencontainers.org/) is a package for a modern container runtime.\n\nAffected versions of this package are vulnerable to Race Condition an attacker who controls the container image for two containers that share a volume can race volume mounts during container initialization, by adding a symlink to the rootfs that points to a directory on the volume. The second container wont be able to see the actual mount, but it can race it by modifying the mount point on the volume.\r\n\r\nThis can be exploited for a full container breakout by racing readonly/mask mounts, allowing writes to dangerous paths like `/proc/sys/kernel/core_pattern`.\n## Remediation\nUpgrade `github.com/opencontainers/runc/libcontainer` to version 1.0.0-rc10 or higher.\n## References\n- [GitHub Issue](https://github.com/opencontainers/runc/issues/2197)\n- [GitHub PR](https://github.com/opencontainers/runc/pull/2190)\n- [GitHub PR](https://github.com/opencontainers/runc/pull/2207)\n"], "cvss_scores": [5.9], "snyk_cve_ids": ["CVE-2019-19921"], "modified_date": ["20201105"], "title": ["Race Condition"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N/E:U/RL:U/RC:U"], "vuln_commit_date_rules": ["<#2019-12-26T15:41:07Z"], "package_name": ["github.com/opencontainers/runc/libcontainer"], "fixed_in": ["1.0.0-rc10"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMOPENCONTAINERSRUNCLIBCONTAINER-540485"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/opencontainers/runc"], "exploit": ["Unproven"], "patch_exists": [""], "fixable": [true], "versions": ["0.0.8", "0.0.2", "0.1.1", "1.0.0-rc1", "1.0.0-rc6", "1.0.0-rc2", "0.0.1", "0.0.2.1", "1.0.0-rc7", "1.0.0-rc3", "0.0.6", "1.0.0-rc8", "1.0.0-rc5", "1.0.0-rc4", "1.0.0-rc9", "0.0.7", "0.0.4", "0.1.0", "0.0.9", "0.0.5", "0.0.3"]}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMOPENSHIFTORIGIN-50042"], "references": ["GitHub Commit:https://github.com/openshift/origin/commit/f762dc6f052a36b0dc2b72e23aa7895aac6a84f1", "GitHub Issue:https://github.com/openshift/origin/issues/3951", "OSS security Advisory:http://www.openwall.com/lists/oss-security/2016/07/13/10"], "snyk_cwes": ["CWE-255"], "vertex_label": ["SCVE"], "description": ["## Overview\r\nAffected version of [`github.com/openshift/origin`](https://github.com/openshift/origin) are vulnerable to Information Exposure.\r\nopenshift-node in OpenShift Origin 1.1.6 and earlier improperly stores router credentials as envvars in the pod when the --credentials option is used, which allows local users to obtain sensitive private key information by reading the systemd journal.\r\n\r\n## References\r\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-8945)\r\n- [GitHub Commit](https://github.com/openshift/origin/commit/f762dc6f052a36b0dc2b72e23aa7895aac6a84f1)\r\n- [Openwall](http://www.openwall.com/lists/oss-security/2016/07/13/10)\r\n- [GitHub PR](https://github.com/openshift/origin/issues/3951)"], "cvss_scores": [5.1], "snyk_cve_ids": ["CVE-2015-8945"], "modified_date": ["20201105"], "title": ["Information Exposure"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:L/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"], "vuln_commit_date_rules": [">=#2015-02-23T16:18:44Z&<#2017-01-25T15:00:02Z"], "package_name": ["github.com/openshift/origin"], "fixed_in": ["1.5.0-alpha.3"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMOPENSHIFTORIGIN-50042"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/openshift/origin"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.4.0", "1.1.5", "1.1.4", "1.0.6", "1.2.0", "1.0.1", "1.2.1", "1.2.0-rc1", "1.0.3", "1.0.0", "1.5.0-alpha.0", "1.3.3", "1.3.0-alpha.3", "1.4.0-alpha.1", "1.1.3", "1.5.0-alpha.2", "1.4.0-alpha.0", "1.3.1", "1.3.0", "1.3.0-rc1", "1.3.0-alpha.0", "1.3.0-alpha.1", "1.0.2", "1.1.1", "1.4.1", "1.2.0-rc2", "1.0.7", "1.0.5", "1.0.4", "1.3.2", "1.1.6", "1.3.0-alpha.2", "1.1.0.1", "1.1.2", "1.0.8", "1.1", "1.1.1.1", "1.5.0-alpha.1", "1.4.0-rc1", "1.2.2"]}]