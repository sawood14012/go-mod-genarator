[{"severity": ["low"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMOPENSHIFTLIBRARYGOPKGOPERATORRESOURCERESOURCEAPPLY-472066"], "references": ["GitHub PR:https://github.com/openshift/library-go/pull/244", "GitHub PR:https://github.com/openshift/library-go/pull/472", "RedHat Bugzilla Bug:https://bugzilla.redhat.com/show_bug.cgi?id=1734615"], "snyk_cwes": ["CWE-532"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/openshift/library-go/pkg/operator/resource/resourceapply](https://github.com/openshift/library-go) is a package for creating helpers for going from apis and clients to useful runtime constructs.\n\nAffected versions of this package are vulnerable to Sensitive Data Exposure. None\n## Remediation\nUpgrade `github.com/openshift/library-go/pkg/operator/resource/resourceapply` to version 4.1 or higher.\n## References\n- [GitHub PR](https://github.com/openshift/library-go/pull/244)\n- [GitHub PR](https://github.com/openshift/library-go/pull/472)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1734615)\n"], "cvss_scores": [3.5], "snyk_cve_ids": ["CVE-2019-10213"], "modified_date": ["20201105"], "title": ["Sensitive Data Exposure"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N/E:U/RL:O/RC:R"], "vuln_commit_date_rules": [">=#2019-02-18T13:11:52Z&<#2019-07-31T16:04:04Z"], "package_name": ["github.com/openshift/library-go/pkg/operator/resource/resourceapply"], "fixed_in": ["4.1"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMOPENSHIFTLIBRARYGOPKGOPERATORRESOURCERESOURCEAPPLY-472066"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/openshift/library-go"], "exploit": ["Unproven"], "patch_exists": [""], "fixable": [true], "versions": []}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCOCKROACHDBCOCKROACHPKGSERVERSERVERPB-536002"], "references": ["GitHub Issue:https://github.com/cockroachdb/cockroach/issues/42567", "GitHub PR:https://github.com/cockroachdb/cockroach/pull/42563", "GitHub PR:https://github.com/cockroachdb/cockroach/pull/42726", "GitHub PR:https://github.com/cockroachdb/cockroach/pull/42727", "GitHub PR:https://github.com/cockroachdb/cockroach/pull/42910"], "snyk_cwes": ["CWE-285"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/cockroachdb/cockroach/pkg/server/serverpb](https://github.com/cockroachdb/cockroach) is an open source, cloud-native SQL database.\n\nAffected versions of this package are vulnerable to Improper Authorization. A non-admin authenticated user can call any admin endpoint, even if they should be admin-only operations, as long as the endpoint is visible over HTTP. It makes it possible for non-admin users to shut down a node or view SQL objects on which they have no permission.\n## Remediation\nUpgrade `github.com/cockroachdb/cockroach/pkg/server/serverpb` to version 19.1.16, 19.2.2 or higher.\n## References\n- [GitHub Issue](https://github.com/cockroachdb/cockroach/issues/42567)\n- [GitHub PR](https://github.com/cockroachdb/cockroach/pull/42563)\n- [GitHub PR](https://github.com/cockroachdb/cockroach/pull/42726)\n- [GitHub PR](https://github.com/cockroachdb/cockroach/pull/42727)\n- [GitHub PR](https://github.com/cockroachdb/cockroach/pull/42910)\n"], "cvss_scores": [8.8], "modified_date": ["20201105"], "title": ["Improper Authorization"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"], "vuln_commit_date_rules": ["<#2019-11-25T12:37:40Z"], "package_name": ["github.com/cockroachdb/cockroach/pkg/server/serverpb"], "fixed_in": ["19.1.16", "19.2.2"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMCOCKROACHDBCOCKROACHPKGSERVERSERVERPB-536002"], "snyk_pvt_vulnerability": [true], "module_name": ["github.com/cockroachdb/cockroach"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["19.2.1", "19.1.7", "19.1.9", "19.1.5", "19.1.3", "19.1.11", "19.1.6", "19.1.0", "19.1.8", "19.1.4", "19.2.1-rc.1", "19.1.10", "19.1.1", "19.2.0", "19.1.2"]}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGRAFANAGRAFANAPKGTSDBMYSQL-608936"], "references": ["Blog Post and PoC:https://swarm.ptsecurity.com/grafana-6-4-3-arbitrary-file-read/", "ChangeLog:https://github.com/grafana/grafana/blob/master/CHANGELOG.md%23644-2019-11-06", "GitHub PR:https://github.com/grafana/grafana/pull/20192"], "snyk_cwes": ["CWE-22"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/grafana/grafana/pkg/tsdb/mysql](https://pkg.go.dev/github.com/grafana/grafana/pkg/tsdb/mysql?tab=doc) is a tool for beautiful monitoring and metric analytics & dashboards for Graphite, InfluxDB & Prometheus & More.\n\nAffected versions of this package are vulnerable to Arbitrary File Read via MySQL data source. An authenticated attacker that has privileges can modify the data source configurations.\n## Remediation\nUpgrade `github.com/grafana/grafana/pkg/tsdb/mysql` to version 6.4.4 or higher.\n## References\n- [Blog Post and PoC](https://swarm.ptsecurity.com/grafana-6-4-3-arbitrary-file-read/)\n- [ChangeLog](https://github.com/grafana/grafana/blob/master/CHANGELOG.md#644-2019-11-06)\n- [GitHub PR](https://github.com/grafana/grafana/pull/20192)\n"], "cvss_scores": [6.5], "snyk_cve_ids": ["CVE-2019-19499"], "modified_date": ["20201105"], "title": ["Arbitrary File Read"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N/E:P"], "vuln_commit_date_rules": ["<#2019-11-06T08:40:58Z"], "package_name": ["github.com/grafana/grafana/pkg/tsdb/mysql"], "fixed_in": ["6.4.4"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMGRAFANAGRAFANAPKGTSDBMYSQL-608936"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/grafana/grafana"], "exploit": ["Proof of Concept"], "patch_exists": [""], "fixable": [true], "versions": []}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGRAFANAGRAFANA-72632"], "references": ["GitHub Commit:https://github.com/grafana/grafana/commit/112fa2b8b92d737fc7519d72f562867e532e61fd", "GitHub Commit:https://github.com/grafana/grafana/commit/5bd11744dd889565719e34fd6383d9189cc80f12", "GitHub Issue:https://github.com/grafana/grafana/issues/13667", "GitHub PR:https://github.com/grafana/grafana/pull/13670"], "snyk_cwes": ["CWE-79"], "vertex_label": ["SCVE"], "description": ["## Overview\n[grafana](https://github.com/grafana/grafana)  is an open source, feature rich metrics dashboard and graph editor for Graphite, Elasticsearch, OpenTSDB, Prometheus and InfluxDB.\r\n\r\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) attacks via the query editor.\r\n\r\n## Details\r\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\r\n\r\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser\u2019s Same Origin Policy.\r\n\r\n\u05bfInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\r\n\r\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they\u2019ve been correctly escaped in the application code and in this way the attempted attack is diverted.\r\n \r\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \r\n\r\n### Types of attacks\r\nThere are a few methods by which XSS can be manipulated:\r\n\r\n|Type|Origin|Description|\r\n|--|--|--|\r\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\r\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user\u2019s browser.| \r\n|**DOM-based**|Client|The attacker forces the user\u2019s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\r\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\r\n\r\n### Affected environments\r\nThe following environments are susceptible to an XSS attack:\r\n\r\n* Web servers\r\n* Application servers\r\n* Web application environments\r\n\r\n### How to prevent\r\nThis section describes the top best practices designed to specifically protect your code: \r\n\r\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \r\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \r\n* Give users the option to disable client-side scripts.\r\n* Redirect invalid requests.\r\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\r\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\r\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\r\n\r\n## Remediation\r\nUpgrade `grafana` to version 5.3.2 or higher.\n\n## References\n- [GitHub Commit](https://github.com/grafana/grafana/commit/112fa2b8b92d737fc7519d72f562867e532e61fd)\n- [GitHub Commit](https://github.com/grafana/grafana/commit/5bd11744dd889565719e34fd6383d9189cc80f12)\n- [GitHub Issue](https://github.com/grafana/grafana/issues/13667)\n- [GitHub PR](https://github.com/grafana/grafana/pull/13670)\n"], "cvss_scores": [6.5], "modified_date": ["20201104"], "title": ["Cross-site Scripting (XSS)"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N"], "vuln_commit_date_rules": ["<#2018-10-23T09:18:34Z"], "package_name": ["github.com/grafana/grafana"], "fixed_in": ["5.3.2"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMGRAFANAGRAFANA-72632"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/grafana/grafana"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.5.0", "1.1.0", "4.6.5", "4.1.0", "3.0.4", "3.0.0-beta6", "4.6.1", "4.0.0", "list", "1.8.0-rc1", "3.0-beta1", "5.3.0-beta1", "5.2.0-beta1", "5.0.0-beta1", "4.3.1", "packages@6.3.0-alpha.36", "1.8.1", "1.3.0", "5.0.0-beta5", "4.1.0-beta1", "5.1.1", "4.5.2", "4.2.0", "4.2.0-beta1", "5.3.0-beta2", "5.1.3", "4.6.3", "4.6.0-beta2", "4.6.0-beta1", "2.6.0-beta1", "5.2.0", "5.2.0-beta2", "5.1.0", "4.1.1", "4.0.2", "4.0.0-beta1", "3.1.1", "3.1.0", "3.1.0-beta1", "2.1.3", "2.0.1", "1.0.1", "omgtest", "1.9.0", "packages@6.3.0-alpha.33", "5.3.1", "5.2.3", "5.1.4", "5.1.0-beta1", "5.0.3", "5.0.0", "4.5.0", "4.4.2", "4.0.0-beta2", "5.3.0-beta3", "5.0.2", "5.0.0-beta4", "5.0.0-beta2", "4.6.0-beta3", "4.5.1", "4.3.0", "3.0.0-beta7", "2.1.2", "5.0.0-beta3", "4.4.1", "2.6.0", "5.3.0", "5.0.4", "4.4.0", "2.1.1", "2.0.2", "1.8.0", "4.6.4", "4.3.0-beta1", "2.5.0", "2.0.0-beta3", "5.0.1", "4.6.0", "4.4.3", "dupa", "test", "1.4.0", "3.0-beta3", "1.6.1", "1.5.1", "1.7.0-rc1", "packages@6.3.0-beta.1", "1.7.0", "1.0", "3.0-beta2", "1.9.0-rc1", "1.5.2", "1.2.0", "1.6.0", "1.0.3", "1.5.3", "5.,2.4", "1.0.4", "5.2.4", "5.2.2", "4.5.0-beta1", "3.0.3", "2.0.0-beta1", "3.0-beta4", "test-new-release-pipeline", "1.0.2", "1.5.4", "5.1.5", "4.6.2", "3.0.2", "5.2.5", "5.2.1", "5.2.0-beta3", "5.1.2", "4.3.2", "4.1.2", "4.0.1", "3.0.1", "2.1.0", "3.0-beta5", "1.9.1"]}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-K8SIOKUBERNETES-50019"], "references": ["GitHub Commit:https://github.com/kubernetes/kubernetes/commit/68f2add9bd5d43b9da1424d87d88f83d120e17d0", "NVD:https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-5305", "RHSA Security Advisory:https://access.redhat.com/errata/RHSA-2015:1945"], "snyk_cwes": ["CWE-22"], "vertex_label": ["SCVE"], "description": ["## Overview\nAffected version of [`github.com/kubernetes/kubernetes`](https://github.com/kubernetes/kubernetes) are vulnerable to Directory Traversal.\nDirectory traversal vulnerability in Kubernetes, as used in Red Hat OpenShift Enterprise 3.0, allows attackers to write to arbitrary files via a crafted object type name, which is not properly handled before passing it to etcd.\n\n## Details\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with dot-dot-slash (../) sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\r\n\r\nDirectory Traversal vulnerabilities can be generally divided into two types:\r\n\r\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\r\n\r\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\r\n\r\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\r\n\r\n```\r\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\r\n```\r\n**Note** `%2e` is the URL encoded version of `.` (dot).\r\n\r\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \r\n\r\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\r\n\r\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\r\n\r\n```\r\n2018-04-15 22:04:29 .....           19           19  good.txt\r\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\r\n```\n\n\n## References\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-5305)\n- [GitHub Commit](https://github.com/kubernetes/kubernetes/commit/68f2add9bd5d43b9da1424d87d88f83d120e17d0)\n- [Redhat Security Advisory](https://access.redhat.com/errata/RHSA-2015:1945)\n"], "cvss_scores": [6.5], "snyk_cve_ids": ["CVE-2015-5305"], "modified_date": ["20201105"], "title": ["Directory Traversal"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L"], "vuln_commit_date_rules": [">=#2015-02-02T19:44:53Z&<#2015-10-28T22:56:18Z"], "package_name": ["k8s.io/kubernetes"], "fixed_in": ["1.1.1"], "snyk_vuln_id": ["SNYK-GOLANG-K8SIOKUBERNETES-50019"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/kubernetes/kubernetes", "k8s.io/kubernetes"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["0.19.1", "1.1.0-alpha.1", "0.19.2", "0.18.2", "0.7.1", "0.4.1", "0.16.2", "0.14.0", "0.6.1", "0.4.2", "0.21.2", "0.20.1", "0.18.0", "0.9.2", "0.9.1", "0.8.4", "0.8.2", "0.5.5", "0.4.3", "0.21.0", "0.20.0", "1.1.1-beta.0", "0.21.4", "0.16.1", "0.8.1", "0.8.0", "0.5.1", "1.1.0-beta", "1.0.5", "1.0.3", "0.21.1", "0.15.0", "0.3", "1.0.1", "0.17.0", "0.16.0", "0.14.2", "0.13.1", "0.5.3", "0.5.2", "0.4.4", "1.0.6", "1.1.0", "1.0.4", "0.13.2", "0.9.3", "1.1.1-beta", "0.21.3", "0.20.2", "0.19.0", "0.9.0", "0.7.2", "0.5.4", "1.1.0-alpha.0", "1.0.8-beta", "1.0.0", "0.19.3", "0.7.3", "0.18.1", "0.17.1", "0.2", "0.4", "1.0.2", "0.14.1", "0.12.0", "0.7.4", "0.5", "1.0.7", "0.12.2", "0.11.0", "0.10.1", "1.1.1-beta.1", "0.13.1-de", "0.13.0", "0.12.1", "0.10.0", "0.7.0", "0.6.2", "0.6.0", "0.5.6"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHASHICORPNOMADCOMMANDAGENT-564510"], "references": ["GitHub Issue:https://github.com/hashicorp/nomad/issues/7002", "GitHub PR:https://github.com/hashicorp/nomad/pull/7022"], "snyk_cwes": ["CWE-400"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/hashicorp/nomad/command/agent](https://github.com/hashicorp/nomad) is a package part of hashicorps nomad.\n\nAffected versions of this package are vulnerable to Uncontrolled Resource Consumption. It allows unbounded resource usage via HTTP and RPC services.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they arent very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet\u2019s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter A\n- `(B|C+)+` The string must then follow the letter A with either the letter B or some number of occurrences of the letter C (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a D\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesnt take very long for a regex engine to find a match:\n\n```bash\n$ time node -e /A(B|C+)+D/.test(ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD)\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e /A(B|C+)+D/.test(ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX)\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn\u2019t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLets look at how our expression runs into this problem, using a shorter string: ACCCX. While it seems fairly straightforward, there are still four different ways that the engine could match those three Cs:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesnt match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of Cs | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 Cs, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `github.com/hashicorp/nomad/command/agent` to version 0.10.3 or higher.\n## References\n- [GitHub Issue](https://github.com/hashicorp/nomad/issues/7002)\n- [GitHub PR](https://github.com/hashicorp/nomad/pull/7022)\n"], "cvss_scores": [7.5], "snyk_cve_ids": ["CVE-2020-7218"], "modified_date": ["20201105"], "title": ["Uncontrolled Resource Consumption"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"], "vuln_commit_date_rules": ["<#2020-01-30T18:38:25Z"], "package_name": ["github.com/hashicorp/nomad/command/agent"], "fixed_in": ["0.10.3"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMHASHICORPNOMADCOMMANDAGENT-564510"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/hashicorp/nomad"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["0.9.6", "0.7.0", "0.9.5", "0.9.4-rc1", "0.9.2-rc1", "0.8.4", "0.7.1-rc1", "0.7.0-rc1", "0.5.5", "0.5.2", "0.5.0", "0.4.0", "0.9.0-rc2", "0.10.2", "0.10.0-rc1", "0.8.4-rc1", "0.5.0-rc1", "0.2.3", "0.8.5", "0.5.1", "0.10.0-beta1", "0.9.2", "0.9.1-rc1", "0.9.0-rc1", "0.9.0-beta1", "0.8.7-rc1", "0.8.2", "0.7.0-rc2", "0.5.5-rc2", "0.5.1-rc2", "0.3.0-rc2", "0.10.0-connect1", "0.9.3", "0.9.0-beta3", "0.5.2-rc1", "0.2.1", "0.9.7", "0.8.7", "0.9.1", "0.8.1", "0.8.0-rc1", "0.6.0-rc1", "0.5.6", "0.4.1", "0.2.3-rc1", "0.2.2", "0.2.0", "0.10.2-rc1", "0.9.0-beta2", "0.7.1", "0.7.0-rc3", "0.6.0", "0.5.5-rc1", "0.5.4", "0.5.3", "0.5.3-rc1", "0.5.0-rc2", "0.4.3", "0.4.0-rc1", "0.3.1", "0.7.1-rc1+ent", "0.9.4", "0.3.2", "0.10.0", "0.6.2", "0.5.6-rc1", "0.7.1-rc1+pro", "0.3rc1", "0.4.2", "0.4.0-rc2", "0.3.2-rc1", "0.1.2", "show", "0.0.0", "0.8.0", "0.6.3", "0.6.0-rc2", "0.3.0", "0.1.1", "0.10.1", "0.9.0", "0.8.6", "0.8.3", "0.7.0-beta1", "0.6.3-rc1", "0.6.1", "0.5.1-rc1", "0.4.1-rc1", "0.3.2-rc2", "0.1.0"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOLANGCRYPTO-551925"], "references": ["Exploit DB:https://www.exploit-db.com/exploits/48121", "GitHub Fix Commit:https://github.com/golang/crypto/commit/bac4c82f69751a6dd76e702d54b3ceb88adab236", "Google Forums:https://groups.google.com/forum/%23%21topic/golang-announce/3L45YRc91SY"], "snyk_cwes": ["CWE-347"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/golang/crypto](https://github.com/golang/crypto) is a SSH client and server\n\nAffected versions of this package are vulnerable to Improper Signature Verification. An attacker can craft an `ssh-ed25519` or `sk-ssh-...@openssh.com` public key, such that the library will panic when trying to verify a signature with it. Clients can deliver such a public key and signature to any `golang.org/x/crypto/ssh` server with a `PublicKeyCallback`, and servers can deliver them to any `golang.org/x/crypto/ssh` client.\n## Remediation\nUpgrade `github.com/golang/crypto` to version 0.0.0-20200220183623-bac4c82f6975 or higher.\n## References\n- [Exploit DB](https://www.exploit-db.com/exploits/48121)\n- [GitHub Fix Commit](https://github.com/golang/crypto/commit/bac4c82f69751a6dd76e702d54b3ceb88adab236)\n- [Google Forums](https://groups.google.com/forum/#!topic/golang-announce/3L45YRc91SY)\n"], "cvss_scores": [8.2], "snyk_cve_ids": ["CVE-2020-9283"], "modified_date": ["20201105"], "title": ["Improper Signature Verification"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:N/E:P/RL:O/RC:R"], "vuln_commit_date_rules": ["<#2020-02-20T18:36:23Z"], "package_name": ["github.com/golang/crypto"], "fixed_in": ["0.0.0-20200220183623-bac4c82f6975"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMGOLANGCRYPTO-551925"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/golang/crypto"], "exploit": ["Proof of Concept"], "patch_exists": [""], "fixable": [true], "versions": []}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATACONTAINERSRUNTIMEVIRTCONTAINERS-570070"], "references": ["GitHub Issue:https://github.com/kata-containers/runtime/issues/2474", "GitHub PR:https://github.com/kata-containers/runtime/pull/2475"], "snyk_cwes": ["CWE-400"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/kata-containers/runtime/virtcontainers](https://godoc.org/github.com/kata-containers/runtime/virtcontainers) is a manages hardware virtualized containers. Each container belongs to a set of containers sharing the same networking namespace and storage, also known as a sandbox.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). Upon container teardown, a malicious guest can trick the kata-runtime into unmounting any mount point on the host and all mount points underneath it, potentiality resulting in a host DoS.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `github.com/kata-containers/runtime/virtcontainers` to version 1.11.0 or higher.\n## References\n- [GitHub Issue](https://github.com/kata-containers/runtime/issues/2474)\n- [GitHub PR](https://github.com/kata-containers/runtime/pull/2475)\n"], "cvss_scores": [7.5], "snyk_cve_ids": ["CVE-2020-2024"], "modified_date": ["20201105"], "title": ["Denial of Service (DoS)"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"], "vuln_commit_date_rules": ["<#2020-02-19T13:37:41Z"], "package_name": ["github.com/kata-containers/runtime/virtcontainers"], "fixed_in": ["1.11.0"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMKATACONTAINERSRUNTIMEVIRTCONTAINERS-570070"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/kata-containers/runtime"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.5.5", "1.9.0-alpha2", "1.1.1", "1.6.4", "1.9.0", "1.6.6", "1.10.8", "1.4.0", "1.5.0", "1.8.3", "1.10.1", "1.9.4", "1.11.0-alpha1", "1.9.1", "1.10.7", "1.3.0", "1.5.2", "1.5.0-rc2", "1.10.5", "1.10.2", "1.2.0", "1.9.0-alpha1", "1.11.0-rc0", "1.10.4", "1.8.0-alpha2", "1.9.0-alpha0", "1.10.3", "1.3.0-rc1", "1.5.1", "1.6.0-rc2", "1.0.0", "1.8.4", "1.6.0-rc1", "1.7.2", "1.7.0-alpha0", "1.5.0-rc1", "1.3.1", "1.9.0-rc0", "1.4.3", "1.10.0-rc0", "1.7.4", "1.5.4", "1.8.0-rc0", "1.9.6", "1.9.5", "1.8.0-alpha1", "1.7.0", "1.8.2", "1.8.0", "1.6.7", "1.1.0", "1.9.2", "1.8.0-alpha0", "0.3.0", "1.10.0-alpha0", "1.10.0-alpha1", "1.7.1", "1.6.5", "1.11.0-alpha0", "0.2.0", "1.7.0-alpha1", "1.6.1", "1.6.2", "1.10.6", "1.6.3", "1.5.3", "1.9.7", "1.3.0-rc0", "1.4.2", "1.2.1", "1.8.5", "1.10.0", "1.4.1", "1.7.3", "1.2.2", "1.8.1", "1.9.3", "1.6.0", "0.0.1", "1.7.0-rc1"]}, {"severity": ["medium"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKUBERNETESKUBERNETESPKGKUBELETSERVER-561504"], "references": ["GitHub Commit:https://github.com/kubernetes/kubernetes/commit/9802bfcec0580169cffce2a3d468689a407fa7dc", "GitHub Issue:https://github.com/kubernetes/kubernetes/issues/89377", "GitHub PR:https://github.com/kubernetes/kubernetes/pull/87913", "Kubernetes Security Announce:https://groups.google.com/forum/%23%21topic/kubernetes-security-announce/2UOlsba2g0s"], "snyk_cwes": ["CWE-789"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/kubernetes/kubernetes/pkg/kubelet/server](https://pkg.go.dev/github.com/kubernetes/kubernetes/pkg/kubelet/server?tab=doc) is a package containing functions related to serving Kubelets external interface.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) via the kubelet API, including the unauthenticated HTTP read-only API typically served on port 10255, and the authenticated HTTPS API typically served on port 10250.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `github.com/kubernetes/kubernetes/pkg/kubelet/server` to version 1.15.10, 1.16.6, 1.17.2 or higher.\n## References\n- [GitHub Commit](https://github.com/kubernetes/kubernetes/commit/9802bfcec0580169cffce2a3d468689a407fa7dc)\n- [GitHub Issue](https://github.com/kubernetes/kubernetes/issues/89377)\n- [GitHub PR](https://github.com/kubernetes/kubernetes/pull/87913)\n- [Kubernetes Security Announce](https://groups.google.com/forum/#!topic/kubernetes-security-announce/2UOlsba2g0s)\n"], "cvss_scores": [4.3], "snyk_cve_ids": ["CVE-2020-8551"], "modified_date": ["20201105"], "title": ["Denial of Service (DoS)"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:A/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"], "vuln_commit_date_rules": ["<#2020-02-08T05:51:53Z"], "package_name": ["github.com/kubernetes/kubernetes/pkg/kubelet/server"], "fixed_in": ["1.15.10", "1.16.6", "1.17.2"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMKUBERNETESKUBERNETESPKGKUBELETSERVER-561504"], "snyk_pvt_vulnerability": [false], "module_name": ["github.com/kubernetes/kubernetes"], "exploit": ["Not Defined"], "patch_exists": [""], "fixable": [true], "versions": ["1.15.5", "1.15.1", "1.15.1-beta.0", "1.17.1", "1.15.8", "1.15.7", "1.15.3-beta.0", "1.15.4-beta.0", "1.17.0", "1.15.7-beta.0", "1.15.9", "1.16.3-beta.0", "1.15.2", "1.15.8-beta.1", "1.15.6-beta.0", "1.15.0", "1.15.4", "1.16.5-beta.1", "1.15.6", "1.15.10-beta.0", "1.16.6-beta.0", "1.16.3", "1.15.3", "1.16.0", "1.15.9-beta.0", "1.16.4-beta.0", "1.16.2-beta.0", "1.15.8-beta.0", "1.16.2", "1.17.2-beta.0", "1.15.5-beta.0", "1.16.5-beta.0", "1.16.1-beta.0", "1.16.4", "1.15.2-beta.0", "1.16.1", "1.16.5", "1.17.1-beta.0"]}, {"severity": ["high"], "snyk_url": ["https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUADMINUADMIN-597184"], "references": ["GitHub Commit:https://github.com/uadmin/uadmin/commit/a28a44f966417233bff36f96994f71d3911dddc2", "GitHub Release:https://github.com/uadmin/uadmin/releases/tag/v0.5.0"], "snyk_cwes": ["CWE-89"], "vertex_label": ["SCVE"], "description": ["## Overview\n[github.com/uadmin/uadmin](https://github.com/uadmin) is a fully loaded web framework for Golang.\n\nAffected versions of this package are vulnerable to SQL Injection. Multiple SQL Injection vulnerabilities exist within `uadmin` API handlers.\n## Remediation\nUpgrade `github.com/uadmin/uadmin` to version 0.5.0 or higher.\n## References\n- [GitHub Commit](https://github.com/uadmin/uadmin/commit/a28a44f966417233bff36f96994f71d3911dddc2)\n- [GitHub Release](https://github.com/uadmin/uadmin/releases/tag/v0.5.0)\n"], "cvss_scores": [7.5], "modified_date": ["20201105"], "title": ["SQL Injection"], "snyk_ecosystem": ["golang"], "malicious": [false], "snyk_cvss_v3": ["CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N/E:U/RL:O/RC:R"], "vuln_commit_date_rules": ["<#2020-08-02T08:08:08Z"], "package_name": ["github.com/uadmin/uadmin"], "fixed_in": ["0.5.0"], "snyk_vuln_id": ["SNYK-GOLANG-GITHUBCOMUADMINUADMIN-597184"], "snyk_pvt_vulnerability": [true], "module_name": ["github.com/uadmin/uadmin"], "exploit": ["Unproven"], "patch_exists": [""], "fixable": [true], "versions": ["0.4.0", "0.1.1", "0.1.0-rc.1", "0.1.0", "0.2.0"]}]